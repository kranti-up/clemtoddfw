{"experiments": [{"name": "monolithic_llm", "game_instances": [{"game_id": 60, "data": {"filename": "PMUL0938.json", "data_split": "test", "rawmessage": ["You are planning your trip in Cambridge", "You are looking for a <span class='emphasis'>place to dine</span>. The restaurant should be in the <span class='emphasis'>south</span> and should be in the <span class='emphasis'>expensive</span> price range", "The restaurant should serve <span class='emphasis'>traditional</span> food", "If there is no such restaurant, how about one that serves <span class='emphasis'>mexican</span> food", "Once you find the <span class='emphasis'>restaurant</span> you want to book a table for <span class='emphasis'>6 people</span> at <span class='emphasis'>14:00</span> on <span class='emphasis'>wednesday</span>", "Make sure you get the <span class='emphasis'>reference number</span>", "You are also looking for a <span class='emphasis'>train</span>. The train should <span class='emphasis'>leave after 15:45</span> and should leave on <span class='emphasis'>thursday</span>", "The train should depart from <span class='emphasis'>cambridge</span> and should go to <span class='emphasis'>london kings cross</span>", "Once you find the train you want to make a booking for <span class='emphasis'>the same group of people</span>", "Make sure you get the <span class='emphasis'>reference number</span>"], "message": "You are planning your trip in Cambridge.\nYou are looking for a place to dine. The restaurant should be in the south and should be in the expensive price range.\nThe restaurant should serve traditional food.\nIf there is no such restaurant, how about one that serves mexican food.\nOnce you find the restaurant you want to book a table for 6 people at 14:00 on wednesday.\nMake sure you get the reference number.\nYou are also looking for a train. The train should leave after 15:45 and should leave on thursday.\nThe train should depart from cambridge and should go to london kings cross.\nOnce you find the train you want to make a booking for the same group of people.\nMake sure you get the reference number", "dialogue_type": "multi", "domains": {"train": {"info": {"leaveAt": "15:45", "destination": "london kings cross", "day": "thursday", "departure": "cambridge"}, "fail_info": {}, "book": {"invalid": false, "people": "6"}, "fail_book": {}}, "restaurant": {"info": {"food": "mexican", "pricerange": "expensive", "area": "south"}, "fail_info": {"food": "traditional", "pricerange": "expensive", "area": "south"}, "book": {"people": "6", "day": "wednesday", "invalid": false, "time": "14:00"}, "fail_book": {}}}, "tasktype": "info_book_all", "corpususer": [{"utterance": "I want a place to dine in the south that is expensive.", "dialog_act": {"Restaurant-Inform": [["area", "south"], ["pricerange", "expensive"]]}}, {"utterance": "We have several options that include Chinese, Indian, Italian, and Mexican. Which one do you prefer?", "dialog_act": {"Restaurant-Inform": [["choice", "several"], ["food", "Chinese"], ["food", "Indian"], ["food", "Italian"], ["food", "Mexican"]], "Restaurant-Select": [["none", "none"]]}}, {"utterance": "I'm looking for a restaurant serves traditional food. Are there any nearby?", "dialog_act": {"Restaurant-Inform": [["food", "traditional"]]}}, {"utterance": "There are no restaurants in the south serving traditional food. Would you prefer something different?", "dialog_act": {"Restaurant-Inform": [["area", "the south"], ["food", "traditional"]], "Restaurant-NoOffer": [["none", "none"]], "Restaurant-Request": [["food", "?"]], "general-reqmore": [["none", "none"]]}}, {"utterance": "How about Mexican food?  Can you check on that for me?", "dialog_act": {"Restaurant-Inform": [["food", "mexican"]]}}, {"utterance": "Sure! We have the Chiquito Restaurant Bar located in the south serving Mexican food.  Would you like to make a reservation?", "dialog_act": {"Booking-Inform": [["none", "none"]], "Restaurant-Inform": [["area", "south"], ["food", "Mexican"], ["name", "Chiquito Restaurant Bar"]]}}, {"utterance": "Yes please. I need reservation for 6 people at 1400 on wednesday. ", "dialog_act": {"Restaurant-Inform": [["bookday", "wednesday"], ["bookpeople", "6"], ["booktime", "1400"]]}}, {"utterance": "I have a table for 6 reserved for you on Wednesday at 14:00.  They will hold the table for 15 minutes.  Your reference number is DKBLDY07", "dialog_act": {"Booking-Book": [["bookday", "Wednesday"], ["booktime", "14:00"], ["ref", "DKBLDY07"]]}}, {"utterance": "Thanks. I also need to find a train for Thursday.", "dialog_act": {"Train-Inform": [["day", "thursday"]]}}, {"utterance": "OK, what are your departure and arrival stations, and what time of day would you like to travel?", "dialog_act": {"Train-Request": [["departure", "?"], ["destination", "?"], ["leaveat", "?"]]}}, {"utterance": "It should leave after 15:45 on thursday.   ", "dialog_act": {"Train-Inform": [["leaveat", "15:45"]]}}, {"utterance": "Sure, which stations will you be departing from and arriving to?", "dialog_act": {"Train-Request": [["departure", "?"], ["destination", "?"]]}}, {"utterance": "I am departing from cambridge and arriving in london kings cross. ", "dialog_act": {"Train-Inform": [["departure", "cambridge"], ["destination", "london kings cross"]]}}, {"utterance": "Ok, leaving after 15:45 on thursday we have Train TR1791 from cambridge to london kings cross\tleaving at 17:00 and arriving at 17:51. Shall I book it, if so for how many?", "dialog_act": {"Train-Inform": [["arriveby", "17:51"], ["departure", "cambridge"], ["destination", "london kings cross"], ["leaveat", "17:00"], ["trainid", "TR1791"]], "Train-OfferBook": [["none", "none"]], "Train-Request": [["bookpeople", "?"]]}}, {"utterance": "That will work. For six people as well. Please make sure I receive the reference number.", "dialog_act": {"Train-Inform": [["bookpeople", "6"]], "Train-Request": [["ref", "?"]]}}, {"utterance": "Booking was successful, the total fee is 141.6 GBP payable at the station .\nReference number is : V1YVJYN8. Can I help with anything else today?", "dialog_act": {"Train-Inform": [["ref", "V1YVJYN8"]], "Train-OfferBooked": [["price", "141.6 GBP"]], "general-reqmore": [["none", "none"]]}}, {"utterance": "That's all I need for today, thanks for your help!", "dialog_act": {"general-thank": [["none", "none"]]}}, {"utterance": "Goodbye, enjoy the rest of your day.", "dialog_act": {"general-bye": [["none", "none"]]}}], "db_path": "games/clemtod/resources/data/en/multiwoz", "tsystem": "monolithic_llm", "statusmsg": {"welcome": "Welcome to the $domain booking bot. Let me know, how can I help you?", "usergoal": "Here is your goal:\nGoal:\n$goal\n\nBegin your interaction with the bot to achieve the goal.", "dmresponse": "$response", "no_booking": "The game has started. You are the first player.", "no_slots": "The game has ended. Thank you for playing.", "no_domain": "domain info is not available", "no_key_match": "none of the keys are matched", "partial_key_match": "only some of the keys are matched", "no_value_match": "keys are matched but none of the values are matched", "partial_value_match": "for some keys, values are matched", "unknown": "unknown error", "success": "Success", "failure": "Failure", "dbfetch": "DB query result", "validatebooking": "in booking.", "availablecolumns": "The available columns are: $columns", "missing_slots": "The missing arguments are: $slots", "invalid_value": "The value(s) for the $slot are not matching with the booking system.", "booking_reference": "Your booking reference number is $refnum.", "nocolumnmatch": "No matching columns found in the database.", "novaluematch": "No matching data found in the database for the given query.", "nodomainmatch": "No matching domain found in the database.", "booking_failure": "Cannot proceed with the booking.", "multiple_entries": "Multiple entries found in the database.", "few_db_matching_records": "More matching database records are available. Here are the first five.", "all_db_matching_records": "These are all the matching database records.", "missing_other_slots_booking": "The booking system needs additional details [$slots] to proceed with the booking."}, "n_turns": 15, "liberal_processing": true, "booking_mandatory_keys": {"restaurant": ["name", "people", "day", "time"], "hotel": ["name", "people", "day", "stay"], "train": ["people", "trainid"]}, "domaindbkeys": {"train": ["destination", "day", "departure", "arriveby", "leaveat", "duration", "trainid"], "restaurant": ["area", "pricerange", "name", "food"]}, "mwozschema": {"train": {"service_name": "train", "slots": [{"name": "arriveby", "is_categorical": false, "possible_values": []}, {"name": "departure", "is_categorical": true, "possible_values": ["birmingham new street", "bishops stortford", "broxbourne", "cambridge", "ely", "kings lynn", "leicester", "london kings cross", "london liverpool street", "norwich", "peterborough", "stansted airport", "stevenage"]}, {"name": "day", "is_categorical": true, "possible_values": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, {"name": "bookpeople", "is_categorical": true, "possible_values": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "15"]}, {"name": "leaveat", "is_categorical": false, "possible_values": []}, {"name": "destination", "is_categorical": true, "possible_values": ["birmingham new street", "bishops stortford", "broxbourne", "cambridge", "ely", "kings lynn", "leicester", "london kings cross", "london liverpool street", "norwich", "peterborough", "stansted airport", "stevenage"]}, {"name": "trainid", "is_categorical": false, "possible_values": []}, {"name": "ref", "is_categorical": false, "possible_values": []}, {"name": "price", "is_categorical": false, "possible_values": []}, {"name": "duration", "is_categorical": false, "possible_values": []}], "description": "find trains that take you to places", "intents": [{"name": "find_train", "description": "search for trains that take you places", "is_transactional": false, "required_slots": [], "optional_slots": {"train-destination": "dontcare", "train-arriveby": "dontcare", "train-departure": "dontcare", "train-day": "dontcare", "train-bookpeople": "dontcare", "train-leaveat": "dontcare"}}, {"name": "book_train", "description": "book train tickets", "is_transactional": true, "required_slots": [], "optional_slots": {"train-destination": "dontcare", "train-arriveby": "dontcare", "train-departure": "dontcare", "train-day": "dontcare", "train-bookpeople": "dontcare", "train-leaveat": "dontcare"}}]}, "restaurant": {"service_name": "restaurant", "slots": [{"name": "pricerange", "is_categorical": true, "possible_values": ["cheap", "expensive", "moderate"]}, {"name": "area", "is_categorical": true, "possible_values": ["centre", "east", "north", "south", "west"]}, {"name": "food", "is_categorical": false, "possible_values": []}, {"name": "name", "is_categorical": false, "possible_values": []}, {"name": "bookday", "is_categorical": true, "possible_values": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, {"name": "bookpeople", "is_categorical": true, "possible_values": ["1", "2", "3", "4", "5", "6", "7", "8"]}, {"name": "booktime", "is_categorical": false, "possible_values": []}, {"name": "address", "is_categorical": false, "possible_values": []}, {"name": "phone", "is_categorical": false, "possible_values": []}, {"name": "postcode", "is_categorical": false, "possible_values": []}, {"name": "ref", "is_categorical": false, "possible_values": []}], "description": "find places to dine and whet your appetite", "intents": [{"name": "find_restaurant", "description": "search for places to wine and dine", "is_transactional": false, "required_slots": [], "optional_slots": {"restaurant-pricerange": "dontcare", "restaurant-area": "dontcare", "restaurant-food": "dontcare", "restaurant-name": "dontcare", "restaurant-bookday": "dontcare", "restaurant-bookpeople": "dontcare", "restaurant-booktime": "dontcare"}}, {"name": "book_restaurant", "description": "book a table at a restaurant", "is_transactional": true, "required_slots": [], "optional_slots": {"restaurant-pricerange": "dontcare", "restaurant-area": "dontcare", "restaurant-food": "dontcare", "restaurant-name": "dontcare", "restaurant-bookday": "dontcare", "restaurant-bookpeople": "dontcare", "restaurant-booktime": "dontcare"}}]}}, "json_schema": {"type": "function", "function": {"name": "process_dsystem", "description": "Extract structured details for restaurant, hotel, or flight-related queries.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["follow-up", "db-query", "validate-booking"], "description": "Defines the type of action. Possible values: 'follow-up' (requires a response), 'db-query' (fetches data from a database), 'validate-booking' (checks booking status)."}, "details": {"oneOf": [{"type": "string", "title": "FollowUpDetails", "description": "Details for a follow-up action, containing a message."}, {"type": "object", "description": "Details for a database query action.", "properties": {"domain": {"type": "string", "enum": ["restaurant", "hotel", "attraction", "taxi", "train"]}, "restaurant": {"type": "object", "properties": {"info": {"type": "object", "properties": {"food": {"type": "string"}, "area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "name": {"type": "string"}}, "anyOf": [{"required": ["food"]}, {"required": ["area"]}, {"required": ["pricerange"]}, {"required": ["name"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "hotel": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "type": {"type": "string", "enum": ["hotel", "guesthouse"]}, "internet": {"type": "string", "enum": ["yes", "no"]}, "parking": {"type": "string", "enum": ["yes", "no"]}, "name": {"type": "string"}, "stars": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "enum": ["1", "2", "3", "4", "5"]}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["area"]}, {"required": ["pricerange"]}, {"required": ["type"]}, {"required": ["internet"]}, {"required": ["parking"]}, {"required": ["parking"]}, {"required": ["name"]}, {"required": ["stars"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "attraction": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "type": {"type": "string", "enum": ["museum", "entertainment", "college", "nightclub", "swimming pool", "multiple sports", "architecture", "cinema", "boat", "theatre", "concert hall", "park", "local site", "hotspot", "church", "special"]}, "name": {"type": "string"}}, "anyOf": [{"required": ["area"]}, {"required": ["type"]}, {"required": ["name"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "train": {"type": "object", "properties": {"info": {"type": "object", "properties": {"destination": {"type": "string"}, "departure": {"type": "string"}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "arriveby": {"type": "object", "description": "An object representing arrival time conditions with an operator and a time in HH:MM format.", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"], "description": "A comparison operator indicating the condition (e.g., '<=' means arriving by or before a time)."}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$", "description": "A time string formatted as HH:MM (24-hour format)."}}, "required": ["operator", "value"], "additionalProperties": false}, "leaveat": {"type": "object", "description": "An object representing departure time conditions with an operator and a time in HH:MM format.", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"], "description": "A comparison operator indicating the condition (e.g., '<=' means departing by or before a time)."}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$", "description": "A time string formatted as HH:MM (24-hour format)."}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["destination"]}, {"required": ["departure"]}, {"required": ["day"]}, {"required": ["arriveby"]}, {"required": ["leaveat"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "taxi": {"type": "object", "properties": {"info": {"type": "object", "properties": {"arriveby": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["operator", "value"], "additionalProperties": false}, "leaveat": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["arriveby"]}, {"required": ["leaveat"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}}, "required": ["domain"], "additionalProperties": false, "title": "DBQueryDetails"}, {"type": "object", "description": "Details for validating a booking status.", "properties": {"domain": {"type": "string", "enum": ["restaurant", "hotel", "attraction", "taxi", "train"]}, "restaurant": {"type": "object", "properties": {"info": {"type": "object", "properties": {"food": {"type": "string"}, "area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "name": {"type": "string"}}, "required": ["food", "area", "pricerange", "name"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "time": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}}, "required": ["people", "day", "time"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "hotel": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "type": {"type": "string", "enum": ["hotel", "guesthouse"]}, "internet": {"type": "string", "enum": ["yes", "no"]}, "parking": {"type": "string", "enum": ["yes", "no"]}, "name": {"type": "string"}, "stars": {"type": "string", "enum": ["1", "2", "3", "4", "5"]}}, "required": ["area", "pricerange", "type", "internet", "parking", "name", "stars"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "stay": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}}, "required": ["people", "day", "stay"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "attraction": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "type": {"type": "string", "enum": ["museum", "entertainment", "college", "nightclub", "swimming pool", "multiple sports", "architecture", "cinema", "boat", "theatre", "concert hall", "park", "local site", "hotspot", "church", "special"]}, "name": {"type": "string"}}, "required": ["area", "type", "name"], "additionalProperties": false}, "book": {"type": "object", "properties": {"phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}, "entrance_fee": {"type": "string"}}, "anyOf": [{"required": ["phone"]}, {"required": ["postcode"]}, {"required": ["address"]}, {"required": ["entrance_fee"]}], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "train": {"type": "object", "properties": {"info": {"type": "object", "properties": {"destination": {"type": "string"}, "departure": {"type": "string"}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "arriveby": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "leaveat": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["destination", "departure", "day", "arriveby", "leaveat"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "trainid": {"type": "string"}}, "required": ["people", "trainid"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "taxi": {"type": "object", "properties": {"info": {"type": "object", "properties": {"arriveby": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "leaveat": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["arriveby", "leaveat"], "additionalProperties": false}, "book": {"type": "object", "properties": {"phone": {"type": "string", "pattern": "^[0-9]{10}$"}, "car_type": {"type": "string", "enum": ["toyota", "skoda", "bmw", "honda", "ford", "audi", "lexus", "volvo", "volkswagen", "tesla"]}}, "required": ["phone", "car_type"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}}, "required": ["domain"], "additionalProperties": false, "title": "ValidateBookingDetails"}], "discriminator": {"propertyName": "status", "mapping": {"follow-up": "#/parameters/properties/details/oneOf/0", "db-query": "#/parameters/properties/details/oneOf/1", "validate-booking": "#/parameters/properties/details/oneOf/2"}}}}, "required": ["status", "details"], "additionalProperties": false}}}, "book_keys": {"train": {"people": "6"}, "restaurant": {"people": "6", "day": "wednesday", "time": "14:00"}}, "prompts": {"prompt_a": "ROLE: You are a user simulator tasked with interacting naturally with a dialogue system.\n\nTASK:\nYou are planning your trip in Cambridge.\nYou are looking for a place to dine. The restaurant should be in the south and should be in the expensive price range.\nThe restaurant should serve traditional food.\nIf there is no such restaurant, how about one that serves mexican food.\nOnce you find the restaurant you want to book a table for 6 people at 14:00 on wednesday.\nMake sure you get the reference number.\nYou are also looking for a train. The train should leave after 15:45 and should leave on thursday.\nThe train should depart from cambridge and should go to london kings cross.\nOnce you find the train you want to make a booking for the same group of people.\nMake sure you get the reference number\n\nINSTRUCTIONS:\n1. Communicate naturally by expressing preferences, asking clarifying questions, and making decisions as needed. \n2. Maintain a polite and conversational tone.\n3. Respond strictly based on the dialogue system's response. Do not add logic or interpretation beyond what is explicitly stated in the TASK.\n4. Ensure that names and terms remain exactly as provided in the input, without any added or altered punctuation (e.g., do not add apostrophes, hyphens, or other symbols). Maintain strict adherence to the original formatting.\n5. Once the dialogue system completes the task and provides all the required details, reply with \"DONE\". No additional text should follow.\n6. Do not simulate or act as the dialogue system; only interact with it.\n7. Keep responses concise and focused, avoiding unnecessary elaboration or overly conversational tone.\n\n\nOUTPUT FORMAT:\n1. Interaction: Respond appropriately using only the dialogue system's response and the information under TASK.\n2. Task Completion: Reply with \"DONE\"\n\nLets begin\n", "turn_prompt_a": "1. Continue interacting until the task is complete.\n2. Once the dialogue system has completed the task, reply with \"DONE\".\n3. Do not simulate or act as the dialogue system; only interact with it.\n4. When responding to the dialogue system's queries, use only the information provided under TASK.\n5. Ensure that names and terms remain exactly as provided in the input, without any added or altered punctuation (e.g., do not add apostrophes, hyphens, or other symbols). Maintain strict adherence to the original formatting. If there is a conflict between TASK and the dialogue system’s details, always follow the TASK as the final authority.\n\nTASK:\nUse the following details to provide information during the conversation:\nYou are planning your trip in Cambridge.\nYou are looking for a place to dine. The restaurant should be in the south and should be in the expensive price range.\nThe restaurant should serve traditional food.\nIf there is no such restaurant, how about one that serves mexican food.\nOnce you find the restaurant you want to book a table for 6 people at 14:00 on wednesday.\nMake sure you get the reference number.\nYou are also looking for a train. The train should leave after 15:45 and should leave on thursday.\nThe train should depart from cambridge and should go to london kings cross.\nOnce you find the train you want to make a booking for the same group of people.\nMake sure you get the reference number\n\nHere is the dialogue system's response:", "prompt_b": "ROLE: You are a specialized booking assistant interacting with a human user by generating structured JSON responses. Your role is to process user requests and ensure successful task completion while maintaining a professional, helpful tone.\n\nTASK: Assist the user conversationally by:\n1. Extracting key details needed for the task (e.g., domain, date, time, location).\n2. Cross-referencing user-provided information with the database to find relevant matches.\n3. Generating responses to gather missing or unclear information or to provide the booking status.\n4. Consolidating all extracted and clarified details for booking finalization.\n5. Validating the booking and generating confirmation details.\n6. Keeping responses concise and focused, avoiding unnecessary elaboration or overly conversational tone.\n7. All responses must strictly adhere to the schema. Include all required fields.\n\n\nUSER REQUEST:\n", "turn_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying the database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nUSER REQUEST:", "dbquery_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nDATABASE RETRIEVAL RESULTS:", "validbooking_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying the database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nBOOKING VALIDATION STATUS:"}}}, {"game_id": 61, "data": {"filename": "MUL0373.json", "data_split": "test", "rawmessage": ["You are traveling to Cambridge and looking forward to try local restaurants", "You are looking for a <span class='emphasis'>restaurant</span>. The restaurant should be in the <span class='emphasis'>centre</span> and should serve <span class='emphasis'>chinese</span> food", "The restaurant should be in the <span class='emphasis'>expensive</span> price range", "Once you find the <span class='emphasis'>restaurant</span> you want to book a table for <span class='emphasis'>7 people</span> at <span class='emphasis'>15:00</span> on <span class='emphasis'>thursday</span>", "If the booking fails how about <span class='emphasis'>14:00</span>", "Make sure you get the <span class='emphasis'>reference number</span>", "You are also looking for a <span class='emphasis'>train</span>. The train should leave on <span class='emphasis'>friday</span> and should go to <span class='emphasis'>kings lynn</span>", "The train should depart from <span class='emphasis'>cambridge</span> and should <span class='emphasis'>leave after 15:15</span>", "Once you find the train you want to make a booking for <span class='emphasis'>the same group of people</span>", "Make sure you get the <span class='emphasis'>reference number</span>"], "message": "You are traveling to Cambridge and looking forward to try local restaurants.\nYou are looking for a restaurant. The restaurant should be in the centre and should serve chinese food.\nThe restaurant should be in the expensive price range.\nOnce you find the restaurant you want to book a table for 7 people at 15:00 on thursday.\nIf the booking fails how about 14:00.\nMake sure you get the reference number.\nYou are also looking for a train. The train should leave on friday and should go to kings lynn.\nThe train should depart from cambridge and should leave after 15:15.\nOnce you find the train you want to make a booking for the same group of people.\nMake sure you get the reference number", "dialogue_type": "multi", "domains": {"train": {"info": {"leaveAt": "15:15", "destination": "kings lynn", "day": "friday", "departure": "cambridge"}, "fail_info": {}, "book": {"invalid": false, "people": "7"}, "fail_book": {}}, "restaurant": {"info": {"food": "chinese", "pricerange": "expensive", "area": "centre"}, "fail_info": {}, "book": {"pre_invalid": true, "people": "7", "day": "thursday", "invalid": false, "time": "14:00"}, "fail_book": {"time": "15:00"}}}, "tasktype": "info_book_all", "corpususer": [{"utterance": "I'm looking for a restaurant that serves chinese food in the centre of town.", "dialog_act": {"Restaurant-Inform": [["area", "centre"], ["food", "chinese"]]}}, {"utterance": "How about the Jinling Noodle Bar. I can reserve a table for you.", "dialog_act": {"Booking-Inform": [["none", "none"]], "Restaurant-Recommend": [["name", "Jinling Noodle Bar"]]}}, {"utterance": "Is it expensive? I would like the restaurant to be expensive.", "dialog_act": {"Restaurant-Inform": [["pricerange", "expensive"]]}}, {"utterance": "It is not, but the Ugly Duckling is. Would you like more information on that restaurant?", "dialog_act": {"Restaurant-Inform": [["name", "the Ugly Duckling"]]}}, {"utterance": "Please book a table for 7 at Ugly Duckling.", "dialog_act": {"Restaurant-Inform": [["bookpeople", "7"], ["name", "ugly duckling"]]}}, {"utterance": "I'd be happy to! What day and time would you like for your reservation?", "dialog_act": {"Booking-Request": [["bookday", "?"], ["booktime", "?"]]}}, {"utterance": "Please book the reservation for Thursday at 3:00pm and please provide me with a reference number.", "dialog_act": {"Restaurant-Inform": [["bookday", "thursday"], ["booktime", "3:00"]]}}, {"utterance": "Great it's all set RAQ4F5LX is the reference number", "dialog_act": {"Booking-Book": [["ref", "RAQ4F5LX"]]}}, {"utterance": "I'm also looking for a train to leave on Friday and go to Kings Lynn", "dialog_act": {"Train-Inform": [["day", "friday"], ["destination", "kings lynn"]]}}, {"utterance": "Where are you departing from?", "dialog_act": {"Train-Request": [["departure", "?"]]}}, {"utterance": "I'll be departing from Cambridge and want to leave after 15:15.", "dialog_act": {"Train-Inform": [["departure", "cambridge"], ["leaveat", "15:15"]]}}, {"utterance": "There's a train that leaves at 16:11 and arrives at 16:58. The price is 9.80 pounds. Would you like to book it?", "dialog_act": {"Train-Inform": [["arriveby", "16:58"], ["leaveat", "16:11"], ["price", "9.80 pounds"]], "Train-OfferBook": [["none", "none"]]}}, {"utterance": "Yes please, for the same number of people. Can you also get the reference number?", "dialog_act": {"Train-Inform": [["bookpeople", "7"]], "Train-Request": [["ref", "?"]]}}, {"utterance": "Your train tickets have been booked on train TR1911. Your reference number is 4BLMS5KM. Is there anything else I can assist you with?", "dialog_act": {"Train-OfferBooked": [["ref", "4BLMS5KM"], ["trainid", "TR1911"]], "general-reqmore": [["none", "none"]]}}, {"utterance": "I believe that's everything I needed for now. Thanks!", "dialog_act": {"general-thank": [["none", "none"]]}}, {"utterance": "Pleasure serving you!", "dialog_act": {"general-welcome": [["none", "none"]]}}], "db_path": "games/clemtod/resources/data/en/multiwoz", "tsystem": "monolithic_llm", "statusmsg": {"welcome": "Welcome to the $domain booking bot. Let me know, how can I help you?", "usergoal": "Here is your goal:\nGoal:\n$goal\n\nBegin your interaction with the bot to achieve the goal.", "dmresponse": "$response", "no_booking": "The game has started. You are the first player.", "no_slots": "The game has ended. Thank you for playing.", "no_domain": "domain info is not available", "no_key_match": "none of the keys are matched", "partial_key_match": "only some of the keys are matched", "no_value_match": "keys are matched but none of the values are matched", "partial_value_match": "for some keys, values are matched", "unknown": "unknown error", "success": "Success", "failure": "Failure", "dbfetch": "DB query result", "validatebooking": "in booking.", "availablecolumns": "The available columns are: $columns", "missing_slots": "The missing arguments are: $slots", "invalid_value": "The value(s) for the $slot are not matching with the booking system.", "booking_reference": "Your booking reference number is $refnum.", "nocolumnmatch": "No matching columns found in the database.", "novaluematch": "No matching data found in the database for the given query.", "nodomainmatch": "No matching domain found in the database.", "booking_failure": "Cannot proceed with the booking.", "multiple_entries": "Multiple entries found in the database.", "few_db_matching_records": "More matching database records are available. Here are the first five.", "all_db_matching_records": "These are all the matching database records.", "missing_other_slots_booking": "The booking system needs additional details [$slots] to proceed with the booking."}, "n_turns": 15, "liberal_processing": true, "booking_mandatory_keys": {"restaurant": ["name", "people", "day", "time"], "hotel": ["name", "people", "day", "stay"], "train": ["people", "trainid"]}, "domaindbkeys": {"train": ["destination", "day", "departure", "arriveby", "leaveat", "duration", "trainid"], "restaurant": ["area", "pricerange", "name", "food"]}, "mwozschema": {"train": {"service_name": "train", "slots": [{"name": "arriveby", "is_categorical": false, "possible_values": []}, {"name": "departure", "is_categorical": true, "possible_values": ["birmingham new street", "bishops stortford", "broxbourne", "cambridge", "ely", "kings lynn", "leicester", "london kings cross", "london liverpool street", "norwich", "peterborough", "stansted airport", "stevenage"]}, {"name": "day", "is_categorical": true, "possible_values": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, {"name": "bookpeople", "is_categorical": true, "possible_values": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "15"]}, {"name": "leaveat", "is_categorical": false, "possible_values": []}, {"name": "destination", "is_categorical": true, "possible_values": ["birmingham new street", "bishops stortford", "broxbourne", "cambridge", "ely", "kings lynn", "leicester", "london kings cross", "london liverpool street", "norwich", "peterborough", "stansted airport", "stevenage"]}, {"name": "trainid", "is_categorical": false, "possible_values": []}, {"name": "ref", "is_categorical": false, "possible_values": []}, {"name": "price", "is_categorical": false, "possible_values": []}, {"name": "duration", "is_categorical": false, "possible_values": []}], "description": "find trains that take you to places", "intents": [{"name": "find_train", "description": "search for trains that take you places", "is_transactional": false, "required_slots": [], "optional_slots": {"train-destination": "dontcare", "train-arriveby": "dontcare", "train-departure": "dontcare", "train-day": "dontcare", "train-bookpeople": "dontcare", "train-leaveat": "dontcare"}}, {"name": "book_train", "description": "book train tickets", "is_transactional": true, "required_slots": [], "optional_slots": {"train-destination": "dontcare", "train-arriveby": "dontcare", "train-departure": "dontcare", "train-day": "dontcare", "train-bookpeople": "dontcare", "train-leaveat": "dontcare"}}]}, "restaurant": {"service_name": "restaurant", "slots": [{"name": "pricerange", "is_categorical": true, "possible_values": ["cheap", "expensive", "moderate"]}, {"name": "area", "is_categorical": true, "possible_values": ["centre", "east", "north", "south", "west"]}, {"name": "food", "is_categorical": false, "possible_values": []}, {"name": "name", "is_categorical": false, "possible_values": []}, {"name": "bookday", "is_categorical": true, "possible_values": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, {"name": "bookpeople", "is_categorical": true, "possible_values": ["1", "2", "3", "4", "5", "6", "7", "8"]}, {"name": "booktime", "is_categorical": false, "possible_values": []}, {"name": "address", "is_categorical": false, "possible_values": []}, {"name": "phone", "is_categorical": false, "possible_values": []}, {"name": "postcode", "is_categorical": false, "possible_values": []}, {"name": "ref", "is_categorical": false, "possible_values": []}], "description": "find places to dine and whet your appetite", "intents": [{"name": "find_restaurant", "description": "search for places to wine and dine", "is_transactional": false, "required_slots": [], "optional_slots": {"restaurant-pricerange": "dontcare", "restaurant-area": "dontcare", "restaurant-food": "dontcare", "restaurant-name": "dontcare", "restaurant-bookday": "dontcare", "restaurant-bookpeople": "dontcare", "restaurant-booktime": "dontcare"}}, {"name": "book_restaurant", "description": "book a table at a restaurant", "is_transactional": true, "required_slots": [], "optional_slots": {"restaurant-pricerange": "dontcare", "restaurant-area": "dontcare", "restaurant-food": "dontcare", "restaurant-name": "dontcare", "restaurant-bookday": "dontcare", "restaurant-bookpeople": "dontcare", "restaurant-booktime": "dontcare"}}]}}, "json_schema": {"type": "function", "function": {"name": "process_dsystem", "description": "Extract structured details for restaurant, hotel, or flight-related queries.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["follow-up", "db-query", "validate-booking"], "description": "Defines the type of action. Possible values: 'follow-up' (requires a response), 'db-query' (fetches data from a database), 'validate-booking' (checks booking status)."}, "details": {"oneOf": [{"type": "string", "title": "FollowUpDetails", "description": "Details for a follow-up action, containing a message."}, {"type": "object", "description": "Details for a database query action.", "properties": {"domain": {"type": "string", "enum": ["restaurant", "hotel", "attraction", "taxi", "train"]}, "restaurant": {"type": "object", "properties": {"info": {"type": "object", "properties": {"food": {"type": "string"}, "area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "name": {"type": "string"}}, "anyOf": [{"required": ["food"]}, {"required": ["area"]}, {"required": ["pricerange"]}, {"required": ["name"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "hotel": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "type": {"type": "string", "enum": ["hotel", "guesthouse"]}, "internet": {"type": "string", "enum": ["yes", "no"]}, "parking": {"type": "string", "enum": ["yes", "no"]}, "name": {"type": "string"}, "stars": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "enum": ["1", "2", "3", "4", "5"]}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["area"]}, {"required": ["pricerange"]}, {"required": ["type"]}, {"required": ["internet"]}, {"required": ["parking"]}, {"required": ["parking"]}, {"required": ["name"]}, {"required": ["stars"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "attraction": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "type": {"type": "string", "enum": ["museum", "entertainment", "college", "nightclub", "swimming pool", "multiple sports", "architecture", "cinema", "boat", "theatre", "concert hall", "park", "local site", "hotspot", "church", "special"]}, "name": {"type": "string"}}, "anyOf": [{"required": ["area"]}, {"required": ["type"]}, {"required": ["name"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "train": {"type": "object", "properties": {"info": {"type": "object", "properties": {"destination": {"type": "string"}, "departure": {"type": "string"}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "arriveby": {"type": "object", "description": "An object representing arrival time conditions with an operator and a time in HH:MM format.", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"], "description": "A comparison operator indicating the condition (e.g., '<=' means arriving by or before a time)."}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$", "description": "A time string formatted as HH:MM (24-hour format)."}}, "required": ["operator", "value"], "additionalProperties": false}, "leaveat": {"type": "object", "description": "An object representing departure time conditions with an operator and a time in HH:MM format.", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"], "description": "A comparison operator indicating the condition (e.g., '<=' means departing by or before a time)."}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$", "description": "A time string formatted as HH:MM (24-hour format)."}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["destination"]}, {"required": ["departure"]}, {"required": ["day"]}, {"required": ["arriveby"]}, {"required": ["leaveat"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "taxi": {"type": "object", "properties": {"info": {"type": "object", "properties": {"arriveby": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["operator", "value"], "additionalProperties": false}, "leaveat": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["arriveby"]}, {"required": ["leaveat"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}}, "required": ["domain"], "additionalProperties": false, "title": "DBQueryDetails"}, {"type": "object", "description": "Details for validating a booking status.", "properties": {"domain": {"type": "string", "enum": ["restaurant", "hotel", "attraction", "taxi", "train"]}, "restaurant": {"type": "object", "properties": {"info": {"type": "object", "properties": {"food": {"type": "string"}, "area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "name": {"type": "string"}}, "required": ["food", "area", "pricerange", "name"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "time": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}}, "required": ["people", "day", "time"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "hotel": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "type": {"type": "string", "enum": ["hotel", "guesthouse"]}, "internet": {"type": "string", "enum": ["yes", "no"]}, "parking": {"type": "string", "enum": ["yes", "no"]}, "name": {"type": "string"}, "stars": {"type": "string", "enum": ["1", "2", "3", "4", "5"]}}, "required": ["area", "pricerange", "type", "internet", "parking", "name", "stars"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "stay": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}}, "required": ["people", "day", "stay"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "attraction": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "type": {"type": "string", "enum": ["museum", "entertainment", "college", "nightclub", "swimming pool", "multiple sports", "architecture", "cinema", "boat", "theatre", "concert hall", "park", "local site", "hotspot", "church", "special"]}, "name": {"type": "string"}}, "required": ["area", "type", "name"], "additionalProperties": false}, "book": {"type": "object", "properties": {"phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}, "entrance_fee": {"type": "string"}}, "anyOf": [{"required": ["phone"]}, {"required": ["postcode"]}, {"required": ["address"]}, {"required": ["entrance_fee"]}], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "train": {"type": "object", "properties": {"info": {"type": "object", "properties": {"destination": {"type": "string"}, "departure": {"type": "string"}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "arriveby": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "leaveat": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["destination", "departure", "day", "arriveby", "leaveat"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "trainid": {"type": "string"}}, "required": ["people", "trainid"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "taxi": {"type": "object", "properties": {"info": {"type": "object", "properties": {"arriveby": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "leaveat": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["arriveby", "leaveat"], "additionalProperties": false}, "book": {"type": "object", "properties": {"phone": {"type": "string", "pattern": "^[0-9]{10}$"}, "car_type": {"type": "string", "enum": ["toyota", "skoda", "bmw", "honda", "ford", "audi", "lexus", "volvo", "volkswagen", "tesla"]}}, "required": ["phone", "car_type"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}}, "required": ["domain"], "additionalProperties": false, "title": "ValidateBookingDetails"}], "discriminator": {"propertyName": "status", "mapping": {"follow-up": "#/parameters/properties/details/oneOf/0", "db-query": "#/parameters/properties/details/oneOf/1", "validate-booking": "#/parameters/properties/details/oneOf/2"}}}}, "required": ["status", "details"], "additionalProperties": false}}}, "book_keys": {"train": {"people": "7"}, "restaurant": {"people": "7", "day": "thursday", "time": "14:00"}}, "prompts": {"prompt_a": "ROLE: You are a user simulator tasked with interacting naturally with a dialogue system.\n\nTASK:\nYou are traveling to Cambridge and looking forward to try local restaurants.\nYou are looking for a restaurant. The restaurant should be in the centre and should serve chinese food.\nThe restaurant should be in the expensive price range.\nOnce you find the restaurant you want to book a table for 7 people at 15:00 on thursday.\nIf the booking fails how about 14:00.\nMake sure you get the reference number.\nYou are also looking for a train. The train should leave on friday and should go to kings lynn.\nThe train should depart from cambridge and should leave after 15:15.\nOnce you find the train you want to make a booking for the same group of people.\nMake sure you get the reference number\n\nINSTRUCTIONS:\n1. Communicate naturally by expressing preferences, asking clarifying questions, and making decisions as needed. \n2. Maintain a polite and conversational tone.\n3. Respond strictly based on the dialogue system's response. Do not add logic or interpretation beyond what is explicitly stated in the TASK.\n4. Ensure that names and terms remain exactly as provided in the input, without any added or altered punctuation (e.g., do not add apostrophes, hyphens, or other symbols). Maintain strict adherence to the original formatting.\n5. Once the dialogue system completes the task and provides all the required details, reply with \"DONE\". No additional text should follow.\n6. Do not simulate or act as the dialogue system; only interact with it.\n7. Keep responses concise and focused, avoiding unnecessary elaboration or overly conversational tone.\n\n\nOUTPUT FORMAT:\n1. Interaction: Respond appropriately using only the dialogue system's response and the information under TASK.\n2. Task Completion: Reply with \"DONE\"\n\nLets begin\n", "turn_prompt_a": "1. Continue interacting until the task is complete.\n2. Once the dialogue system has completed the task, reply with \"DONE\".\n3. Do not simulate or act as the dialogue system; only interact with it.\n4. When responding to the dialogue system's queries, use only the information provided under TASK.\n5. Ensure that names and terms remain exactly as provided in the input, without any added or altered punctuation (e.g., do not add apostrophes, hyphens, or other symbols). Maintain strict adherence to the original formatting. If there is a conflict between TASK and the dialogue system’s details, always follow the TASK as the final authority.\n\nTASK:\nUse the following details to provide information during the conversation:\nYou are traveling to Cambridge and looking forward to try local restaurants.\nYou are looking for a restaurant. The restaurant should be in the centre and should serve chinese food.\nThe restaurant should be in the expensive price range.\nOnce you find the restaurant you want to book a table for 7 people at 15:00 on thursday.\nIf the booking fails how about 14:00.\nMake sure you get the reference number.\nYou are also looking for a train. The train should leave on friday and should go to kings lynn.\nThe train should depart from cambridge and should leave after 15:15.\nOnce you find the train you want to make a booking for the same group of people.\nMake sure you get the reference number\n\nHere is the dialogue system's response:", "prompt_b": "ROLE: You are a specialized booking assistant interacting with a human user by generating structured JSON responses. Your role is to process user requests and ensure successful task completion while maintaining a professional, helpful tone.\n\nTASK: Assist the user conversationally by:\n1. Extracting key details needed for the task (e.g., domain, date, time, location).\n2. Cross-referencing user-provided information with the database to find relevant matches.\n3. Generating responses to gather missing or unclear information or to provide the booking status.\n4. Consolidating all extracted and clarified details for booking finalization.\n5. Validating the booking and generating confirmation details.\n6. Keeping responses concise and focused, avoiding unnecessary elaboration or overly conversational tone.\n7. All responses must strictly adhere to the schema. Include all required fields.\n\n\nUSER REQUEST:\n", "turn_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying the database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nUSER REQUEST:", "dbquery_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nDATABASE RETRIEVAL RESULTS:", "validbooking_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying the database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nBOOKING VALIDATION STATUS:"}}}, {"game_id": 62, "data": {"filename": "MUL0397.json", "data_split": "test", "rawmessage": ["You are traveling to Cambridge and looking forward to try local restaurants", "You are looking for a <span class='emphasis'>train</span>. The train should go to <span class='emphasis'>london kings cross</span> and should leave on <span class='emphasis'>thursday</span>", "The train should <span class='emphasis'>leave after 19:45</span> and should depart from <span class='emphasis'>cambridge</span>", "Once you find the train you want to make a booking for <span class='emphasis'>5 people</span>", "Make sure you get the <span class='emphasis'>reference number</span>", "You are also looking for a <span class='emphasis'>particular restaurant</span>. Its name is called <span class='emphasis'>la tasca</span>", "Once you find the <span class='emphasis'>restaurant</span> you want to book a table for <span class='emphasis'>the same group of people</span> at <span class='emphasis'>15:30</span> on <span class='emphasis'>the same day</span>", "Make sure you get the <span class='emphasis'>reference number</span>"], "message": "You are traveling to Cambridge and looking forward to try local restaurants.\nYou are looking for a train. The train should go to london kings cross and should leave on thursday.\nThe train should leave after 19:45 and should depart from cambridge.\nOnce you find the train you want to make a booking for 5 people.\nMake sure you get the reference number.\nYou are also looking for a particular restaurant. Its name is called la tasca.\nOnce you find the restaurant you want to book a table for the same group of people at 15:30 on the same day.\nMake sure you get the reference number", "dialogue_type": "multi", "domains": {"train": {"info": {"leaveAt": "19:45", "destination": "london kings cross", "day": "thursday", "departure": "cambridge"}, "fail_info": {}, "book": {"invalid": true, "people": "5"}, "fail_book": {}}, "restaurant": {"info": {"name": "la tasca"}, "fail_info": {}, "book": {"people": "5", "day": "thursday", "invalid": false, "time": "15:30"}, "fail_book": {}}}, "tasktype": "info_book_all", "corpususer": [{"utterance": "I travelling to Cambridge and am looking for a train  to the London Kings Cross station leaving on Thursday. ", "dialog_act": {"Train-Inform": [["day", "thursday"], ["departure", "cambridge"], ["destination", "london kings cross"]]}}, {"utterance": "Where will you be traveling from on Thursday?", "dialog_act": {"Train-Request": [["departure", "?"]]}}, {"utterance": "I want to depart from Cambridge after 19:45 and arrive at london kings cross.", "dialog_act": {"Train-Inform": [["departure", "cambridge"], ["leaveat", "19:45"]]}}, {"utterance": "TR0720 departs cambridge at 21:00 on Thursday, heading to london kings cross. How many tickets do you need?", "dialog_act": {"Train-Inform": [["day", "Thursday"], ["departure", "Cambridge"], ["destination", "london kings cross"], ["leaveat", "21:00"], ["trainid", "TR0720"]], "Train-Request": [["bookpeople", "?"]]}}, {"utterance": "I would like to book 4.  Can you tell me the price for each ticket before I  book them?", "dialog_act": {"Train-Inform": [["bookpeople", "4"]], "Train-Request": [["price", "?"]]}}, {"utterance": "The cost for one ticket is 23.60 pounds.", "dialog_act": {"Train-Inform": [["price", "23.60 pounds"]]}}, {"utterance": "I would actually like to book 5 people and would like to know the reference number for the tickets and the address of La Tasca restaurant.", "dialog_act": {"Restaurant-Inform": [["bookpeople", "5"], ["name", "la tasca"]], "Train-Inform": [["bookpeople", "5"]], "Train-Request": [["ref", "?"]]}}, {"utterance": "Booking was successful, your reference number is D8JELRTU. La tasca is located at 14 -16 Bridge Street. Would you like a reservation?", "dialog_act": {"Booking-Inform": [["none", "none"]], "Restaurant-Inform": [["address", "14 -16 Bridge Street"], ["name", "La tasca"]], "Train-OfferBooked": [["ref", "D8JELRTU"]]}}, {"utterance": "Yes please. Can I book a table for five people?", "dialog_act": {"Restaurant-Inform": [["bookpeople", "5"]]}}, {"utterance": "I'd be happy to book that for you, what day and time would you like that reservation for?", "dialog_act": {"Booking-Request": [["bookday", "?"], ["booktime", "?"]]}}, {"utterance": "I would like to book it for 5 people at 15:30 on the same day as the train, Thursday. Can I also get the reference number for that as well?", "dialog_act": {"Restaurant-Inform": [["bookday", "thursday"], ["booktime", "15:30"]], "Train-Inform": [["bookpeople", "5"], ["day", "thursday"]]}}, {"utterance": "The table will be reserved for 15 minutes. Your reference number is XN08QJTD.", "dialog_act": {"Booking-Book": [["ref", "XN08QJTD"]]}}, {"utterance": "Thank you very much!", "dialog_act": {"general-thank": [["none", "none"]]}}, {"utterance": "Is there anything else I can help you with today, or are you all set?", "dialog_act": {"general-reqmore": [["none", "none"]]}}, {"utterance": "That's all, thank you.", "dialog_act": {"general-thank": [["none", "none"]]}}, {"utterance": "Thank you for using our system!", "dialog_act": {"general-bye": [["none", "none"]]}}], "db_path": "games/clemtod/resources/data/en/multiwoz", "tsystem": "monolithic_llm", "statusmsg": {"welcome": "Welcome to the $domain booking bot. Let me know, how can I help you?", "usergoal": "Here is your goal:\nGoal:\n$goal\n\nBegin your interaction with the bot to achieve the goal.", "dmresponse": "$response", "no_booking": "The game has started. You are the first player.", "no_slots": "The game has ended. Thank you for playing.", "no_domain": "domain info is not available", "no_key_match": "none of the keys are matched", "partial_key_match": "only some of the keys are matched", "no_value_match": "keys are matched but none of the values are matched", "partial_value_match": "for some keys, values are matched", "unknown": "unknown error", "success": "Success", "failure": "Failure", "dbfetch": "DB query result", "validatebooking": "in booking.", "availablecolumns": "The available columns are: $columns", "missing_slots": "The missing arguments are: $slots", "invalid_value": "The value(s) for the $slot are not matching with the booking system.", "booking_reference": "Your booking reference number is $refnum.", "nocolumnmatch": "No matching columns found in the database.", "novaluematch": "No matching data found in the database for the given query.", "nodomainmatch": "No matching domain found in the database.", "booking_failure": "Cannot proceed with the booking.", "multiple_entries": "Multiple entries found in the database.", "few_db_matching_records": "More matching database records are available. Here are the first five.", "all_db_matching_records": "These are all the matching database records.", "missing_other_slots_booking": "The booking system needs additional details [$slots] to proceed with the booking."}, "n_turns": 15, "liberal_processing": true, "booking_mandatory_keys": {"restaurant": ["name", "people", "day", "time"], "hotel": ["name", "people", "day", "stay"], "train": ["people", "trainid"]}, "domaindbkeys": {"train": ["destination", "day", "departure", "arriveby", "leaveat", "duration", "trainid"], "restaurant": ["area", "pricerange", "name", "food"]}, "mwozschema": {"train": {"service_name": "train", "slots": [{"name": "arriveby", "is_categorical": false, "possible_values": []}, {"name": "departure", "is_categorical": true, "possible_values": ["birmingham new street", "bishops stortford", "broxbourne", "cambridge", "ely", "kings lynn", "leicester", "london kings cross", "london liverpool street", "norwich", "peterborough", "stansted airport", "stevenage"]}, {"name": "day", "is_categorical": true, "possible_values": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, {"name": "bookpeople", "is_categorical": true, "possible_values": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "15"]}, {"name": "leaveat", "is_categorical": false, "possible_values": []}, {"name": "destination", "is_categorical": true, "possible_values": ["birmingham new street", "bishops stortford", "broxbourne", "cambridge", "ely", "kings lynn", "leicester", "london kings cross", "london liverpool street", "norwich", "peterborough", "stansted airport", "stevenage"]}, {"name": "trainid", "is_categorical": false, "possible_values": []}, {"name": "ref", "is_categorical": false, "possible_values": []}, {"name": "price", "is_categorical": false, "possible_values": []}, {"name": "duration", "is_categorical": false, "possible_values": []}], "description": "find trains that take you to places", "intents": [{"name": "find_train", "description": "search for trains that take you places", "is_transactional": false, "required_slots": [], "optional_slots": {"train-destination": "dontcare", "train-arriveby": "dontcare", "train-departure": "dontcare", "train-day": "dontcare", "train-bookpeople": "dontcare", "train-leaveat": "dontcare"}}, {"name": "book_train", "description": "book train tickets", "is_transactional": true, "required_slots": [], "optional_slots": {"train-destination": "dontcare", "train-arriveby": "dontcare", "train-departure": "dontcare", "train-day": "dontcare", "train-bookpeople": "dontcare", "train-leaveat": "dontcare"}}]}, "restaurant": {"service_name": "restaurant", "slots": [{"name": "pricerange", "is_categorical": true, "possible_values": ["cheap", "expensive", "moderate"]}, {"name": "area", "is_categorical": true, "possible_values": ["centre", "east", "north", "south", "west"]}, {"name": "food", "is_categorical": false, "possible_values": []}, {"name": "name", "is_categorical": false, "possible_values": []}, {"name": "bookday", "is_categorical": true, "possible_values": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, {"name": "bookpeople", "is_categorical": true, "possible_values": ["1", "2", "3", "4", "5", "6", "7", "8"]}, {"name": "booktime", "is_categorical": false, "possible_values": []}, {"name": "address", "is_categorical": false, "possible_values": []}, {"name": "phone", "is_categorical": false, "possible_values": []}, {"name": "postcode", "is_categorical": false, "possible_values": []}, {"name": "ref", "is_categorical": false, "possible_values": []}], "description": "find places to dine and whet your appetite", "intents": [{"name": "find_restaurant", "description": "search for places to wine and dine", "is_transactional": false, "required_slots": [], "optional_slots": {"restaurant-pricerange": "dontcare", "restaurant-area": "dontcare", "restaurant-food": "dontcare", "restaurant-name": "dontcare", "restaurant-bookday": "dontcare", "restaurant-bookpeople": "dontcare", "restaurant-booktime": "dontcare"}}, {"name": "book_restaurant", "description": "book a table at a restaurant", "is_transactional": true, "required_slots": [], "optional_slots": {"restaurant-pricerange": "dontcare", "restaurant-area": "dontcare", "restaurant-food": "dontcare", "restaurant-name": "dontcare", "restaurant-bookday": "dontcare", "restaurant-bookpeople": "dontcare", "restaurant-booktime": "dontcare"}}]}}, "json_schema": {"type": "function", "function": {"name": "process_dsystem", "description": "Extract structured details for restaurant, hotel, or flight-related queries.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["follow-up", "db-query", "validate-booking"], "description": "Defines the type of action. Possible values: 'follow-up' (requires a response), 'db-query' (fetches data from a database), 'validate-booking' (checks booking status)."}, "details": {"oneOf": [{"type": "string", "title": "FollowUpDetails", "description": "Details for a follow-up action, containing a message."}, {"type": "object", "description": "Details for a database query action.", "properties": {"domain": {"type": "string", "enum": ["restaurant", "hotel", "attraction", "taxi", "train"]}, "restaurant": {"type": "object", "properties": {"info": {"type": "object", "properties": {"food": {"type": "string"}, "area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "name": {"type": "string"}}, "anyOf": [{"required": ["food"]}, {"required": ["area"]}, {"required": ["pricerange"]}, {"required": ["name"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "hotel": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "type": {"type": "string", "enum": ["hotel", "guesthouse"]}, "internet": {"type": "string", "enum": ["yes", "no"]}, "parking": {"type": "string", "enum": ["yes", "no"]}, "name": {"type": "string"}, "stars": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "enum": ["1", "2", "3", "4", "5"]}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["area"]}, {"required": ["pricerange"]}, {"required": ["type"]}, {"required": ["internet"]}, {"required": ["parking"]}, {"required": ["parking"]}, {"required": ["name"]}, {"required": ["stars"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "attraction": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "type": {"type": "string", "enum": ["museum", "entertainment", "college", "nightclub", "swimming pool", "multiple sports", "architecture", "cinema", "boat", "theatre", "concert hall", "park", "local site", "hotspot", "church", "special"]}, "name": {"type": "string"}}, "anyOf": [{"required": ["area"]}, {"required": ["type"]}, {"required": ["name"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "train": {"type": "object", "properties": {"info": {"type": "object", "properties": {"destination": {"type": "string"}, "departure": {"type": "string"}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "arriveby": {"type": "object", "description": "An object representing arrival time conditions with an operator and a time in HH:MM format.", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"], "description": "A comparison operator indicating the condition (e.g., '<=' means arriving by or before a time)."}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$", "description": "A time string formatted as HH:MM (24-hour format)."}}, "required": ["operator", "value"], "additionalProperties": false}, "leaveat": {"type": "object", "description": "An object representing departure time conditions with an operator and a time in HH:MM format.", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"], "description": "A comparison operator indicating the condition (e.g., '<=' means departing by or before a time)."}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$", "description": "A time string formatted as HH:MM (24-hour format)."}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["destination"]}, {"required": ["departure"]}, {"required": ["day"]}, {"required": ["arriveby"]}, {"required": ["leaveat"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "taxi": {"type": "object", "properties": {"info": {"type": "object", "properties": {"arriveby": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["operator", "value"], "additionalProperties": false}, "leaveat": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["arriveby"]}, {"required": ["leaveat"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}}, "required": ["domain"], "additionalProperties": false, "title": "DBQueryDetails"}, {"type": "object", "description": "Details for validating a booking status.", "properties": {"domain": {"type": "string", "enum": ["restaurant", "hotel", "attraction", "taxi", "train"]}, "restaurant": {"type": "object", "properties": {"info": {"type": "object", "properties": {"food": {"type": "string"}, "area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "name": {"type": "string"}}, "required": ["food", "area", "pricerange", "name"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "time": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}}, "required": ["people", "day", "time"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "hotel": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "type": {"type": "string", "enum": ["hotel", "guesthouse"]}, "internet": {"type": "string", "enum": ["yes", "no"]}, "parking": {"type": "string", "enum": ["yes", "no"]}, "name": {"type": "string"}, "stars": {"type": "string", "enum": ["1", "2", "3", "4", "5"]}}, "required": ["area", "pricerange", "type", "internet", "parking", "name", "stars"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "stay": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}}, "required": ["people", "day", "stay"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "attraction": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "type": {"type": "string", "enum": ["museum", "entertainment", "college", "nightclub", "swimming pool", "multiple sports", "architecture", "cinema", "boat", "theatre", "concert hall", "park", "local site", "hotspot", "church", "special"]}, "name": {"type": "string"}}, "required": ["area", "type", "name"], "additionalProperties": false}, "book": {"type": "object", "properties": {"phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}, "entrance_fee": {"type": "string"}}, "anyOf": [{"required": ["phone"]}, {"required": ["postcode"]}, {"required": ["address"]}, {"required": ["entrance_fee"]}], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "train": {"type": "object", "properties": {"info": {"type": "object", "properties": {"destination": {"type": "string"}, "departure": {"type": "string"}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "arriveby": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "leaveat": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["destination", "departure", "day", "arriveby", "leaveat"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "trainid": {"type": "string"}}, "required": ["people", "trainid"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "taxi": {"type": "object", "properties": {"info": {"type": "object", "properties": {"arriveby": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "leaveat": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["arriveby", "leaveat"], "additionalProperties": false}, "book": {"type": "object", "properties": {"phone": {"type": "string", "pattern": "^[0-9]{10}$"}, "car_type": {"type": "string", "enum": ["toyota", "skoda", "bmw", "honda", "ford", "audi", "lexus", "volvo", "volkswagen", "tesla"]}}, "required": ["phone", "car_type"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}}, "required": ["domain"], "additionalProperties": false, "title": "ValidateBookingDetails"}], "discriminator": {"propertyName": "status", "mapping": {"follow-up": "#/parameters/properties/details/oneOf/0", "db-query": "#/parameters/properties/details/oneOf/1", "validate-booking": "#/parameters/properties/details/oneOf/2"}}}}, "required": ["status", "details"], "additionalProperties": false}}}, "book_keys": {"train": {"people": "5"}, "restaurant": {"people": "5", "day": "thursday", "time": "15:30"}}, "prompts": {"prompt_a": "ROLE: You are a user simulator tasked with interacting naturally with a dialogue system.\n\nTASK:\nYou are traveling to Cambridge and looking forward to try local restaurants.\nYou are looking for a train. The train should go to london kings cross and should leave on thursday.\nThe train should leave after 19:45 and should depart from cambridge.\nOnce you find the train you want to make a booking for 5 people.\nMake sure you get the reference number.\nYou are also looking for a particular restaurant. Its name is called la tasca.\nOnce you find the restaurant you want to book a table for the same group of people at 15:30 on the same day.\nMake sure you get the reference number\n\nINSTRUCTIONS:\n1. Communicate naturally by expressing preferences, asking clarifying questions, and making decisions as needed. \n2. Maintain a polite and conversational tone.\n3. Respond strictly based on the dialogue system's response. Do not add logic or interpretation beyond what is explicitly stated in the TASK.\n4. Ensure that names and terms remain exactly as provided in the input, without any added or altered punctuation (e.g., do not add apostrophes, hyphens, or other symbols). Maintain strict adherence to the original formatting.\n5. Once the dialogue system completes the task and provides all the required details, reply with \"DONE\". No additional text should follow.\n6. Do not simulate or act as the dialogue system; only interact with it.\n7. Keep responses concise and focused, avoiding unnecessary elaboration or overly conversational tone.\n\n\nOUTPUT FORMAT:\n1. Interaction: Respond appropriately using only the dialogue system's response and the information under TASK.\n2. Task Completion: Reply with \"DONE\"\n\nLets begin\n", "turn_prompt_a": "1. Continue interacting until the task is complete.\n2. Once the dialogue system has completed the task, reply with \"DONE\".\n3. Do not simulate or act as the dialogue system; only interact with it.\n4. When responding to the dialogue system's queries, use only the information provided under TASK.\n5. Ensure that names and terms remain exactly as provided in the input, without any added or altered punctuation (e.g., do not add apostrophes, hyphens, or other symbols). Maintain strict adherence to the original formatting. If there is a conflict between TASK and the dialogue system’s details, always follow the TASK as the final authority.\n\nTASK:\nUse the following details to provide information during the conversation:\nYou are traveling to Cambridge and looking forward to try local restaurants.\nYou are looking for a train. The train should go to london kings cross and should leave on thursday.\nThe train should leave after 19:45 and should depart from cambridge.\nOnce you find the train you want to make a booking for 5 people.\nMake sure you get the reference number.\nYou are also looking for a particular restaurant. Its name is called la tasca.\nOnce you find the restaurant you want to book a table for the same group of people at 15:30 on the same day.\nMake sure you get the reference number\n\nHere is the dialogue system's response:", "prompt_b": "ROLE: You are a specialized booking assistant interacting with a human user by generating structured JSON responses. Your role is to process user requests and ensure successful task completion while maintaining a professional, helpful tone.\n\nTASK: Assist the user conversationally by:\n1. Extracting key details needed for the task (e.g., domain, date, time, location).\n2. Cross-referencing user-provided information with the database to find relevant matches.\n3. Generating responses to gather missing or unclear information or to provide the booking status.\n4. Consolidating all extracted and clarified details for booking finalization.\n5. Validating the booking and generating confirmation details.\n6. Keeping responses concise and focused, avoiding unnecessary elaboration or overly conversational tone.\n7. All responses must strictly adhere to the schema. Include all required fields.\n\n\nUSER REQUEST:\n", "turn_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying the database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nUSER REQUEST:", "dbquery_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nDATABASE RETRIEVAL RESULTS:", "validbooking_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying the database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nBOOKING VALIDATION STATUS:"}}}, {"game_id": 63, "data": {"filename": "PMUL3263.json", "data_split": "test", "rawmessage": ["You are planning your trip in Cambridge", "You are looking for a <span class='emphasis'>particular restaurant</span>. Its name is called <span class='emphasis'>shiraz restaurant</span>", "Once you find the <span class='emphasis'>restaurant</span> you want to book a table for <span class='emphasis'>5 people</span> at <span class='emphasis'>19:45</span> on <span class='emphasis'>saturday</span>", "Make sure you get the <span class='emphasis'>reference number</span>", "You are also looking for a <span class='emphasis'>train</span>. The train should go to <span class='emphasis'>cambridge</span> and should depart from <span class='emphasis'>birmingham new street</span>", "The train should be on <span class='emphasis'>the same day as the restaurant booking</span> and should <span class='emphasis'>arrive by 13:15</span>", "Once you find the train you want to make a booking for <span class='emphasis'>the same group of people</span>", "Make sure you get the <span class='emphasis'>reference number</span>"], "message": "You are planning your trip in Cambridge.\nYou are looking for a particular restaurant. Its name is called shiraz restaurant.\nOnce you find the restaurant you want to book a table for 5 people at 19:45 on saturday.\nMake sure you get the reference number.\nYou are also looking for a train. The train should go to cambridge and should depart from birmingham new street.\nThe train should be on the same day as the restaurant booking and should arrive by 13:15.\nOnce you find the train you want to make a booking for the same group of people.\nMake sure you get the reference number", "dialogue_type": "multi", "domains": {"train": {"info": {"destination": "cambridge", "day": "saturday", "arriveBy": "13:15", "departure": "birmingham new street"}, "fail_info": {}, "book": {"invalid": true, "people": "5"}, "fail_book": {}}, "restaurant": {"info": {"name": "shiraz restaurant"}, "fail_info": {"name": "india house"}, "book": {"time": "19:45", "day": "saturday", "invalid": false, "people": "5"}, "fail_book": {}}}, "tasktype": "info_book_all", "corpususer": [{"utterance": "I am planning a trip in Cambridge", "dialog_act": {"Attraction-Inform": [["none", "none"]]}}, {"utterance": "What can I help you with?", "dialog_act": {"general-reqmore": [["none", "none"]]}}, {"utterance": "I need to reserve a table at shiraz, can you help me?", "dialog_act": {"Restaurant-Inform": [["name", "shiraz"]]}}, {"utterance": "I sure can. Shiraz is an expensive mediterranean place in the centre of town. What day would you like your reservation?", "dialog_act": {"Booking-Request": [["bookday", "?"]], "Restaurant-Inform": [["area", "centre of town"], ["food", "mediterranean"], ["name", "Shiraz"], ["pricerange", "expensive"]], "general-greet": [["none", "none"]]}}, {"utterance": "I need the reservation for Saturday.", "dialog_act": {"Restaurant-Inform": [["bookday", "saturday"]]}}, {"utterance": "Ok, i am getting the info up now, how many people will this be for and what time?", "dialog_act": {"Booking-Request": [["bookpeople", "?"], ["booktime", "?"]]}}, {"utterance": "There will be 5 of us and 19:45 would be great. ", "dialog_act": {"Restaurant-Inform": [["bookpeople", "5"], ["booktime", "19:45"]]}}, {"utterance": "I have made your reservation. Your reference number is T9VU6COP. ", "dialog_act": {"Booking-Book": [["ref", "T9VU6COP"]]}}, {"utterance": "I also need to book a train. ", "dialog_act": {"Train-Inform": [["none", "none"]]}}, {"utterance": "Great! Where are you going, and when would you like to arrive?", "dialog_act": {"Train-Request": [["arriveby", "?"], ["destination", "?"]], "general-greet": [["none", "none"]]}}, {"utterance": "We are departing from Birmingham New Street and going to Cambridge.", "dialog_act": {"Train-Inform": [["departure", "birmingham new street"], ["destination", "cambridge"]]}}, {"utterance": "Great, what day and time would you like to leave? ", "dialog_act": {"Train-Request": [["day", "?"], ["leaveat", "?"]]}}, {"utterance": "I want to travel on saturday and arrive by 13:15 please", "dialog_act": {"Train-Inform": [["arriveby", "13:15"], ["day", "saturday"]]}}, {"utterance": "Okay, I see 7 trains here matching your needs. Would you like me to reserve tickets?", "dialog_act": {"Train-Inform": [["choice", "7"]], "Train-OfferBook": [["none", "none"]]}}, {"utterance": "Yes choose the arrival time closest to 13:15 and book that train for 5 people. Then give me the reference number", "dialog_act": {"Train-Inform": [["arriveby", "13:15"], ["bookpeople", "5"]], "Train-Request": [["ref", "?"]]}}, {"utterance": "Okay, you are booked and reference number is QSA8VDXW", "dialog_act": {"Train-OfferBooked": [["ref", "QSA8VDXW"]]}}, {"utterance": "Thank you so much.", "dialog_act": {"general-thank": [["none", "none"]]}}, {"utterance": "Is there anything else I can help you with?", "dialog_act": {"general-reqmore": [["none", "none"]]}}, {"utterance": "No, that will be all. Thanks.", "dialog_act": {"general-thank": [["none", "none"]]}}, {"utterance": "Your welcome enjoy your trip", "dialog_act": {"general-bye": [["none", "none"]], "general-welcome": [["none", "none"]]}}], "db_path": "games/clemtod/resources/data/en/multiwoz", "tsystem": "monolithic_llm", "statusmsg": {"welcome": "Welcome to the $domain booking bot. Let me know, how can I help you?", "usergoal": "Here is your goal:\nGoal:\n$goal\n\nBegin your interaction with the bot to achieve the goal.", "dmresponse": "$response", "no_booking": "The game has started. You are the first player.", "no_slots": "The game has ended. Thank you for playing.", "no_domain": "domain info is not available", "no_key_match": "none of the keys are matched", "partial_key_match": "only some of the keys are matched", "no_value_match": "keys are matched but none of the values are matched", "partial_value_match": "for some keys, values are matched", "unknown": "unknown error", "success": "Success", "failure": "Failure", "dbfetch": "DB query result", "validatebooking": "in booking.", "availablecolumns": "The available columns are: $columns", "missing_slots": "The missing arguments are: $slots", "invalid_value": "The value(s) for the $slot are not matching with the booking system.", "booking_reference": "Your booking reference number is $refnum.", "nocolumnmatch": "No matching columns found in the database.", "novaluematch": "No matching data found in the database for the given query.", "nodomainmatch": "No matching domain found in the database.", "booking_failure": "Cannot proceed with the booking.", "multiple_entries": "Multiple entries found in the database.", "few_db_matching_records": "More matching database records are available. Here are the first five.", "all_db_matching_records": "These are all the matching database records.", "missing_other_slots_booking": "The booking system needs additional details [$slots] to proceed with the booking."}, "n_turns": 15, "liberal_processing": true, "booking_mandatory_keys": {"restaurant": ["name", "people", "day", "time"], "hotel": ["name", "people", "day", "stay"], "train": ["people", "trainid"]}, "domaindbkeys": {"train": ["destination", "day", "departure", "arriveby", "leaveat", "duration", "trainid"], "restaurant": ["area", "pricerange", "name", "food"]}, "mwozschema": {"train": {"service_name": "train", "slots": [{"name": "arriveby", "is_categorical": false, "possible_values": []}, {"name": "departure", "is_categorical": true, "possible_values": ["birmingham new street", "bishops stortford", "broxbourne", "cambridge", "ely", "kings lynn", "leicester", "london kings cross", "london liverpool street", "norwich", "peterborough", "stansted airport", "stevenage"]}, {"name": "day", "is_categorical": true, "possible_values": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, {"name": "bookpeople", "is_categorical": true, "possible_values": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "15"]}, {"name": "leaveat", "is_categorical": false, "possible_values": []}, {"name": "destination", "is_categorical": true, "possible_values": ["birmingham new street", "bishops stortford", "broxbourne", "cambridge", "ely", "kings lynn", "leicester", "london kings cross", "london liverpool street", "norwich", "peterborough", "stansted airport", "stevenage"]}, {"name": "trainid", "is_categorical": false, "possible_values": []}, {"name": "ref", "is_categorical": false, "possible_values": []}, {"name": "price", "is_categorical": false, "possible_values": []}, {"name": "duration", "is_categorical": false, "possible_values": []}], "description": "find trains that take you to places", "intents": [{"name": "find_train", "description": "search for trains that take you places", "is_transactional": false, "required_slots": [], "optional_slots": {"train-destination": "dontcare", "train-arriveby": "dontcare", "train-departure": "dontcare", "train-day": "dontcare", "train-bookpeople": "dontcare", "train-leaveat": "dontcare"}}, {"name": "book_train", "description": "book train tickets", "is_transactional": true, "required_slots": [], "optional_slots": {"train-destination": "dontcare", "train-arriveby": "dontcare", "train-departure": "dontcare", "train-day": "dontcare", "train-bookpeople": "dontcare", "train-leaveat": "dontcare"}}]}, "restaurant": {"service_name": "restaurant", "slots": [{"name": "pricerange", "is_categorical": true, "possible_values": ["cheap", "expensive", "moderate"]}, {"name": "area", "is_categorical": true, "possible_values": ["centre", "east", "north", "south", "west"]}, {"name": "food", "is_categorical": false, "possible_values": []}, {"name": "name", "is_categorical": false, "possible_values": []}, {"name": "bookday", "is_categorical": true, "possible_values": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, {"name": "bookpeople", "is_categorical": true, "possible_values": ["1", "2", "3", "4", "5", "6", "7", "8"]}, {"name": "booktime", "is_categorical": false, "possible_values": []}, {"name": "address", "is_categorical": false, "possible_values": []}, {"name": "phone", "is_categorical": false, "possible_values": []}, {"name": "postcode", "is_categorical": false, "possible_values": []}, {"name": "ref", "is_categorical": false, "possible_values": []}], "description": "find places to dine and whet your appetite", "intents": [{"name": "find_restaurant", "description": "search for places to wine and dine", "is_transactional": false, "required_slots": [], "optional_slots": {"restaurant-pricerange": "dontcare", "restaurant-area": "dontcare", "restaurant-food": "dontcare", "restaurant-name": "dontcare", "restaurant-bookday": "dontcare", "restaurant-bookpeople": "dontcare", "restaurant-booktime": "dontcare"}}, {"name": "book_restaurant", "description": "book a table at a restaurant", "is_transactional": true, "required_slots": [], "optional_slots": {"restaurant-pricerange": "dontcare", "restaurant-area": "dontcare", "restaurant-food": "dontcare", "restaurant-name": "dontcare", "restaurant-bookday": "dontcare", "restaurant-bookpeople": "dontcare", "restaurant-booktime": "dontcare"}}]}}, "json_schema": {"type": "function", "function": {"name": "process_dsystem", "description": "Extract structured details for restaurant, hotel, or flight-related queries.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["follow-up", "db-query", "validate-booking"], "description": "Defines the type of action. Possible values: 'follow-up' (requires a response), 'db-query' (fetches data from a database), 'validate-booking' (checks booking status)."}, "details": {"oneOf": [{"type": "string", "title": "FollowUpDetails", "description": "Details for a follow-up action, containing a message."}, {"type": "object", "description": "Details for a database query action.", "properties": {"domain": {"type": "string", "enum": ["restaurant", "hotel", "attraction", "taxi", "train"]}, "restaurant": {"type": "object", "properties": {"info": {"type": "object", "properties": {"food": {"type": "string"}, "area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "name": {"type": "string"}}, "anyOf": [{"required": ["food"]}, {"required": ["area"]}, {"required": ["pricerange"]}, {"required": ["name"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "hotel": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "type": {"type": "string", "enum": ["hotel", "guesthouse"]}, "internet": {"type": "string", "enum": ["yes", "no"]}, "parking": {"type": "string", "enum": ["yes", "no"]}, "name": {"type": "string"}, "stars": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "enum": ["1", "2", "3", "4", "5"]}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["area"]}, {"required": ["pricerange"]}, {"required": ["type"]}, {"required": ["internet"]}, {"required": ["parking"]}, {"required": ["parking"]}, {"required": ["name"]}, {"required": ["stars"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "attraction": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "type": {"type": "string", "enum": ["museum", "entertainment", "college", "nightclub", "swimming pool", "multiple sports", "architecture", "cinema", "boat", "theatre", "concert hall", "park", "local site", "hotspot", "church", "special"]}, "name": {"type": "string"}}, "anyOf": [{"required": ["area"]}, {"required": ["type"]}, {"required": ["name"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "train": {"type": "object", "properties": {"info": {"type": "object", "properties": {"destination": {"type": "string"}, "departure": {"type": "string"}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "arriveby": {"type": "object", "description": "An object representing arrival time conditions with an operator and a time in HH:MM format.", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"], "description": "A comparison operator indicating the condition (e.g., '<=' means arriving by or before a time)."}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$", "description": "A time string formatted as HH:MM (24-hour format)."}}, "required": ["operator", "value"], "additionalProperties": false}, "leaveat": {"type": "object", "description": "An object representing departure time conditions with an operator and a time in HH:MM format.", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"], "description": "A comparison operator indicating the condition (e.g., '<=' means departing by or before a time)."}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$", "description": "A time string formatted as HH:MM (24-hour format)."}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["destination"]}, {"required": ["departure"]}, {"required": ["day"]}, {"required": ["arriveby"]}, {"required": ["leaveat"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "taxi": {"type": "object", "properties": {"info": {"type": "object", "properties": {"arriveby": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["operator", "value"], "additionalProperties": false}, "leaveat": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["arriveby"]}, {"required": ["leaveat"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}}, "required": ["domain"], "additionalProperties": false, "title": "DBQueryDetails"}, {"type": "object", "description": "Details for validating a booking status.", "properties": {"domain": {"type": "string", "enum": ["restaurant", "hotel", "attraction", "taxi", "train"]}, "restaurant": {"type": "object", "properties": {"info": {"type": "object", "properties": {"food": {"type": "string"}, "area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "name": {"type": "string"}}, "required": ["food", "area", "pricerange", "name"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "time": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}}, "required": ["people", "day", "time"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "hotel": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "type": {"type": "string", "enum": ["hotel", "guesthouse"]}, "internet": {"type": "string", "enum": ["yes", "no"]}, "parking": {"type": "string", "enum": ["yes", "no"]}, "name": {"type": "string"}, "stars": {"type": "string", "enum": ["1", "2", "3", "4", "5"]}}, "required": ["area", "pricerange", "type", "internet", "parking", "name", "stars"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "stay": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}}, "required": ["people", "day", "stay"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "attraction": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "type": {"type": "string", "enum": ["museum", "entertainment", "college", "nightclub", "swimming pool", "multiple sports", "architecture", "cinema", "boat", "theatre", "concert hall", "park", "local site", "hotspot", "church", "special"]}, "name": {"type": "string"}}, "required": ["area", "type", "name"], "additionalProperties": false}, "book": {"type": "object", "properties": {"phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}, "entrance_fee": {"type": "string"}}, "anyOf": [{"required": ["phone"]}, {"required": ["postcode"]}, {"required": ["address"]}, {"required": ["entrance_fee"]}], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "train": {"type": "object", "properties": {"info": {"type": "object", "properties": {"destination": {"type": "string"}, "departure": {"type": "string"}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "arriveby": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "leaveat": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["destination", "departure", "day", "arriveby", "leaveat"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "trainid": {"type": "string"}}, "required": ["people", "trainid"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "taxi": {"type": "object", "properties": {"info": {"type": "object", "properties": {"arriveby": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "leaveat": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["arriveby", "leaveat"], "additionalProperties": false}, "book": {"type": "object", "properties": {"phone": {"type": "string", "pattern": "^[0-9]{10}$"}, "car_type": {"type": "string", "enum": ["toyota", "skoda", "bmw", "honda", "ford", "audi", "lexus", "volvo", "volkswagen", "tesla"]}}, "required": ["phone", "car_type"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}}, "required": ["domain"], "additionalProperties": false, "title": "ValidateBookingDetails"}], "discriminator": {"propertyName": "status", "mapping": {"follow-up": "#/parameters/properties/details/oneOf/0", "db-query": "#/parameters/properties/details/oneOf/1", "validate-booking": "#/parameters/properties/details/oneOf/2"}}}}, "required": ["status", "details"], "additionalProperties": false}}}, "book_keys": {"train": {"people": "5"}, "restaurant": {"time": "19:45", "day": "saturday", "people": "5"}}, "prompts": {"prompt_a": "ROLE: You are a user simulator tasked with interacting naturally with a dialogue system.\n\nTASK:\nYou are planning your trip in Cambridge.\nYou are looking for a particular restaurant. Its name is called shiraz restaurant.\nOnce you find the restaurant you want to book a table for 5 people at 19:45 on saturday.\nMake sure you get the reference number.\nYou are also looking for a train. The train should go to cambridge and should depart from birmingham new street.\nThe train should be on the same day as the restaurant booking and should arrive by 13:15.\nOnce you find the train you want to make a booking for the same group of people.\nMake sure you get the reference number\n\nINSTRUCTIONS:\n1. Communicate naturally by expressing preferences, asking clarifying questions, and making decisions as needed. \n2. Maintain a polite and conversational tone.\n3. Respond strictly based on the dialogue system's response. Do not add logic or interpretation beyond what is explicitly stated in the TASK.\n4. Ensure that names and terms remain exactly as provided in the input, without any added or altered punctuation (e.g., do not add apostrophes, hyphens, or other symbols). Maintain strict adherence to the original formatting.\n5. Once the dialogue system completes the task and provides all the required details, reply with \"DONE\". No additional text should follow.\n6. Do not simulate or act as the dialogue system; only interact with it.\n7. Keep responses concise and focused, avoiding unnecessary elaboration or overly conversational tone.\n\n\nOUTPUT FORMAT:\n1. Interaction: Respond appropriately using only the dialogue system's response and the information under TASK.\n2. Task Completion: Reply with \"DONE\"\n\nLets begin\n", "turn_prompt_a": "1. Continue interacting until the task is complete.\n2. Once the dialogue system has completed the task, reply with \"DONE\".\n3. Do not simulate or act as the dialogue system; only interact with it.\n4. When responding to the dialogue system's queries, use only the information provided under TASK.\n5. Ensure that names and terms remain exactly as provided in the input, without any added or altered punctuation (e.g., do not add apostrophes, hyphens, or other symbols). Maintain strict adherence to the original formatting. If there is a conflict between TASK and the dialogue system’s details, always follow the TASK as the final authority.\n\nTASK:\nUse the following details to provide information during the conversation:\nYou are planning your trip in Cambridge.\nYou are looking for a particular restaurant. Its name is called shiraz restaurant.\nOnce you find the restaurant you want to book a table for 5 people at 19:45 on saturday.\nMake sure you get the reference number.\nYou are also looking for a train. The train should go to cambridge and should depart from birmingham new street.\nThe train should be on the same day as the restaurant booking and should arrive by 13:15.\nOnce you find the train you want to make a booking for the same group of people.\nMake sure you get the reference number\n\nHere is the dialogue system's response:", "prompt_b": "ROLE: You are a specialized booking assistant interacting with a human user by generating structured JSON responses. Your role is to process user requests and ensure successful task completion while maintaining a professional, helpful tone.\n\nTASK: Assist the user conversationally by:\n1. Extracting key details needed for the task (e.g., domain, date, time, location).\n2. Cross-referencing user-provided information with the database to find relevant matches.\n3. Generating responses to gather missing or unclear information or to provide the booking status.\n4. Consolidating all extracted and clarified details for booking finalization.\n5. Validating the booking and generating confirmation details.\n6. Keeping responses concise and focused, avoiding unnecessary elaboration or overly conversational tone.\n7. All responses must strictly adhere to the schema. Include all required fields.\n\n\nUSER REQUEST:\n", "turn_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying the database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nUSER REQUEST:", "dbquery_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nDATABASE RETRIEVAL RESULTS:", "validbooking_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying the database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nBOOKING VALIDATION STATUS:"}}}, {"game_id": 64, "data": {"filename": "PMUL0899.json", "data_split": "test", "rawmessage": ["You are planning your trip in Cambridge", "You are looking for a <span class='emphasis'>train</span>. The train should <span class='emphasis'>arrive by 16:00</span> and should leave on <span class='emphasis'>monday</span>", "The train should go to <span class='emphasis'>broxbourne</span> and should depart from <span class='emphasis'>cambridge</span>", "Once you find the train you want to make a booking for <span class='emphasis'>1 people</span>", "Make sure you get the <span class='emphasis'>reference number</span>", "You are also looking for a <span class='emphasis'>particular restaurant</span>. Its name is called <span class='emphasis'>travellers rest</span>", "Once you find the <span class='emphasis'>restaurant</span> you want to book a table for <span class='emphasis'>the same group of people</span> at <span class='emphasis'>13:00</span> on <span class='emphasis'>the same day</span>", "If the booking fails how about <span class='emphasis'>tuesday</span>", "Make sure you get the <span class='emphasis'>reference number</span>"], "message": "You are planning your trip in Cambridge.\nYou are looking for a train. The train should arrive by 16:00 and should leave on monday.\nThe train should go to broxbourne and should depart from cambridge.\nOnce you find the train you want to make a booking for 1 people.\nMake sure you get the reference number.\nYou are also looking for a particular restaurant. Its name is called travellers rest.\nOnce you find the restaurant you want to book a table for the same group of people at 13:00 on the same day.\nIf the booking fails how about tuesday.\nMake sure you get the reference number", "dialogue_type": "multi", "domains": {"train": {"info": {"destination": "broxbourne", "day": "monday", "arriveBy": "16:00", "departure": "cambridge"}, "fail_info": {}, "book": {"invalid": true, "people": "1"}, "fail_book": {}}, "restaurant": {"info": {"name": "travellers rest"}, "fail_info": {"name": "anatolia"}, "book": {"people": "1", "day": "monday", "invalid": true, "time": "13:00"}}}, "tasktype": "info_book_all", "corpususer": [{"utterance": "Hello, I am looking for a train that arrives by 16:00 and leaves on monday.", "dialog_act": {"Train-Inform": [["arriveby", "16:00"], ["day", "monday"]]}}, {"utterance": "There are multiple trains available to you. Where are you departing from and what is your destination please?", "dialog_act": {"Train-Request": [["departure", "?"], ["destination", "?"]]}}, {"utterance": "I want to broxbourne from cambridge.", "dialog_act": {"Train-Inform": [["departure", "cambridge"], ["destination", "broxbourne"]]}}, {"utterance": "We have trains leaving from 05:01 every hour until 14:01 that will get you to Broxbourne by 16:00.  What time would be more acceptable to you?", "dialog_act": {"Train-Inform": [["arriveby", "16:00"], ["destination", "Broxbourne"], ["leaveat", "05:01 every hour until 14:01"]], "Train-Request": [["arriveby", "?"], ["leaveat", "?"]]}}, {"utterance": "Once you find the train you want to make a booking for 1 people.\nMake sure you get the reference number", "dialog_act": {"Train-Inform": [["bookpeople", "1"]]}}, {"utterance": "The TR0796 train leaves Cambridge at 05:01 and arrives in Broxbourne 06:01.  The cost in 17.90 pounds.  Is this a good train for you?", "dialog_act": {"Train-Inform": [["arriveby", "06:01"], ["departure", "Cambridge"], ["destination", "Broxbourne"], ["leaveat", "05:01"], ["price", "17.90 pounds"]], "Train-OfferBook": [["none", "none"]]}}, {"utterance": "Yes please. Please book a ticket for one person. ", "dialog_act": {"Train-Inform": [["bookpeople", "1"]]}}, {"utterance": "The booking was successful your reference number is  XUKSDFW4. Is there anything I can help with today?", "dialog_act": {"Train-OfferBooked": [["ref", "XUKSDFW4"]], "general-reqmore": [["none", "none"]]}}, {"utterance": "Yes. I would like a restaurant for the same day. The name is Travellers rest.", "dialog_act": {"Restaurant-Inform": [["name", "travellers rest"]]}}, {"utterance": "Travellers restaurant is an expensive british restaurant in the west part of town. Is there anything else I can do for you?", "dialog_act": {"Restaurant-Inform": [["area", "west"], ["food", "british"], ["name", "Travellers"], ["pricerange", "expensive"]], "general-reqmore": [["none", "none"]]}}, {"utterance": "Can you book that restaurant for me, for one person at 13:00?", "dialog_act": {"Restaurant-Inform": [["bookpeople", "1"], ["booktime", "13:00"]]}}, {"utterance": "Booking was successful. The table will be reserved for 15 minutes. Your reference number is : RYE38VWC.  Can I do anything else for you today?", "dialog_act": {"Booking-Book": [["ref", "RYE38VWC"]], "general-reqmore": [["none", "none"]]}}, {"utterance": "That is all that I need. Thank you.", "dialog_act": {"general-thank": [["none", "none"]]}}, {"utterance": "Thank you so much for calling Cambridge TownInfo centre! We hope you enjoy your time in our city!", "dialog_act": {"general-bye": [["none", "none"]], "general-welcome": [["none", "none"]]}}], "db_path": "games/clemtod/resources/data/en/multiwoz", "tsystem": "monolithic_llm", "statusmsg": {"welcome": "Welcome to the $domain booking bot. Let me know, how can I help you?", "usergoal": "Here is your goal:\nGoal:\n$goal\n\nBegin your interaction with the bot to achieve the goal.", "dmresponse": "$response", "no_booking": "The game has started. You are the first player.", "no_slots": "The game has ended. Thank you for playing.", "no_domain": "domain info is not available", "no_key_match": "none of the keys are matched", "partial_key_match": "only some of the keys are matched", "no_value_match": "keys are matched but none of the values are matched", "partial_value_match": "for some keys, values are matched", "unknown": "unknown error", "success": "Success", "failure": "Failure", "dbfetch": "DB query result", "validatebooking": "in booking.", "availablecolumns": "The available columns are: $columns", "missing_slots": "The missing arguments are: $slots", "invalid_value": "The value(s) for the $slot are not matching with the booking system.", "booking_reference": "Your booking reference number is $refnum.", "nocolumnmatch": "No matching columns found in the database.", "novaluematch": "No matching data found in the database for the given query.", "nodomainmatch": "No matching domain found in the database.", "booking_failure": "Cannot proceed with the booking.", "multiple_entries": "Multiple entries found in the database.", "few_db_matching_records": "More matching database records are available. Here are the first five.", "all_db_matching_records": "These are all the matching database records.", "missing_other_slots_booking": "The booking system needs additional details [$slots] to proceed with the booking."}, "n_turns": 15, "liberal_processing": true, "booking_mandatory_keys": {"restaurant": ["name", "people", "day", "time"], "hotel": ["name", "people", "day", "stay"], "train": ["people", "trainid"]}, "domaindbkeys": {"train": ["destination", "day", "departure", "arriveby", "leaveat", "duration", "trainid"], "restaurant": ["area", "pricerange", "name", "food"]}, "mwozschema": {"train": {"service_name": "train", "slots": [{"name": "arriveby", "is_categorical": false, "possible_values": []}, {"name": "departure", "is_categorical": true, "possible_values": ["birmingham new street", "bishops stortford", "broxbourne", "cambridge", "ely", "kings lynn", "leicester", "london kings cross", "london liverpool street", "norwich", "peterborough", "stansted airport", "stevenage"]}, {"name": "day", "is_categorical": true, "possible_values": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, {"name": "bookpeople", "is_categorical": true, "possible_values": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "15"]}, {"name": "leaveat", "is_categorical": false, "possible_values": []}, {"name": "destination", "is_categorical": true, "possible_values": ["birmingham new street", "bishops stortford", "broxbourne", "cambridge", "ely", "kings lynn", "leicester", "london kings cross", "london liverpool street", "norwich", "peterborough", "stansted airport", "stevenage"]}, {"name": "trainid", "is_categorical": false, "possible_values": []}, {"name": "ref", "is_categorical": false, "possible_values": []}, {"name": "price", "is_categorical": false, "possible_values": []}, {"name": "duration", "is_categorical": false, "possible_values": []}], "description": "find trains that take you to places", "intents": [{"name": "find_train", "description": "search for trains that take you places", "is_transactional": false, "required_slots": [], "optional_slots": {"train-destination": "dontcare", "train-arriveby": "dontcare", "train-departure": "dontcare", "train-day": "dontcare", "train-bookpeople": "dontcare", "train-leaveat": "dontcare"}}, {"name": "book_train", "description": "book train tickets", "is_transactional": true, "required_slots": [], "optional_slots": {"train-destination": "dontcare", "train-arriveby": "dontcare", "train-departure": "dontcare", "train-day": "dontcare", "train-bookpeople": "dontcare", "train-leaveat": "dontcare"}}]}, "restaurant": {"service_name": "restaurant", "slots": [{"name": "pricerange", "is_categorical": true, "possible_values": ["cheap", "expensive", "moderate"]}, {"name": "area", "is_categorical": true, "possible_values": ["centre", "east", "north", "south", "west"]}, {"name": "food", "is_categorical": false, "possible_values": []}, {"name": "name", "is_categorical": false, "possible_values": []}, {"name": "bookday", "is_categorical": true, "possible_values": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, {"name": "bookpeople", "is_categorical": true, "possible_values": ["1", "2", "3", "4", "5", "6", "7", "8"]}, {"name": "booktime", "is_categorical": false, "possible_values": []}, {"name": "address", "is_categorical": false, "possible_values": []}, {"name": "phone", "is_categorical": false, "possible_values": []}, {"name": "postcode", "is_categorical": false, "possible_values": []}, {"name": "ref", "is_categorical": false, "possible_values": []}], "description": "find places to dine and whet your appetite", "intents": [{"name": "find_restaurant", "description": "search for places to wine and dine", "is_transactional": false, "required_slots": [], "optional_slots": {"restaurant-pricerange": "dontcare", "restaurant-area": "dontcare", "restaurant-food": "dontcare", "restaurant-name": "dontcare", "restaurant-bookday": "dontcare", "restaurant-bookpeople": "dontcare", "restaurant-booktime": "dontcare"}}, {"name": "book_restaurant", "description": "book a table at a restaurant", "is_transactional": true, "required_slots": [], "optional_slots": {"restaurant-pricerange": "dontcare", "restaurant-area": "dontcare", "restaurant-food": "dontcare", "restaurant-name": "dontcare", "restaurant-bookday": "dontcare", "restaurant-bookpeople": "dontcare", "restaurant-booktime": "dontcare"}}]}}, "json_schema": {"type": "function", "function": {"name": "process_dsystem", "description": "Extract structured details for restaurant, hotel, or flight-related queries.", "parameters": {"type": "object", "properties": {"status": {"type": "string", "enum": ["follow-up", "db-query", "validate-booking"], "description": "Defines the type of action. Possible values: 'follow-up' (requires a response), 'db-query' (fetches data from a database), 'validate-booking' (checks booking status)."}, "details": {"oneOf": [{"type": "string", "title": "FollowUpDetails", "description": "Details for a follow-up action, containing a message."}, {"type": "object", "description": "Details for a database query action.", "properties": {"domain": {"type": "string", "enum": ["restaurant", "hotel", "attraction", "taxi", "train"]}, "restaurant": {"type": "object", "properties": {"info": {"type": "object", "properties": {"food": {"type": "string"}, "area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "name": {"type": "string"}}, "anyOf": [{"required": ["food"]}, {"required": ["area"]}, {"required": ["pricerange"]}, {"required": ["name"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "hotel": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "type": {"type": "string", "enum": ["hotel", "guesthouse"]}, "internet": {"type": "string", "enum": ["yes", "no"]}, "parking": {"type": "string", "enum": ["yes", "no"]}, "name": {"type": "string"}, "stars": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "enum": ["1", "2", "3", "4", "5"]}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["area"]}, {"required": ["pricerange"]}, {"required": ["type"]}, {"required": ["internet"]}, {"required": ["parking"]}, {"required": ["parking"]}, {"required": ["name"]}, {"required": ["stars"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "attraction": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "type": {"type": "string", "enum": ["museum", "entertainment", "college", "nightclub", "swimming pool", "multiple sports", "architecture", "cinema", "boat", "theatre", "concert hall", "park", "local site", "hotspot", "church", "special"]}, "name": {"type": "string"}}, "anyOf": [{"required": ["area"]}, {"required": ["type"]}, {"required": ["name"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "train": {"type": "object", "properties": {"info": {"type": "object", "properties": {"destination": {"type": "string"}, "departure": {"type": "string"}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "arriveby": {"type": "object", "description": "An object representing arrival time conditions with an operator and a time in HH:MM format.", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"], "description": "A comparison operator indicating the condition (e.g., '<=' means arriving by or before a time)."}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$", "description": "A time string formatted as HH:MM (24-hour format)."}}, "required": ["operator", "value"], "additionalProperties": false}, "leaveat": {"type": "object", "description": "An object representing departure time conditions with an operator and a time in HH:MM format.", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"], "description": "A comparison operator indicating the condition (e.g., '<=' means departing by or before a time)."}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$", "description": "A time string formatted as HH:MM (24-hour format)."}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["destination"]}, {"required": ["departure"]}, {"required": ["day"]}, {"required": ["arriveby"]}, {"required": ["leaveat"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}, "taxi": {"type": "object", "properties": {"info": {"type": "object", "properties": {"arriveby": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["operator", "value"], "additionalProperties": false}, "leaveat": {"type": "object", "properties": {"operator": {"type": "string", "enum": ["=", ">=", "<=", ">", "<"]}, "value": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["operator", "value"], "additionalProperties": false}}, "anyOf": [{"required": ["arriveby"]}, {"required": ["leaveat"]}], "additionalProperties": false}}, "required": ["info"], "additionalProperties": false}}, "required": ["domain"], "additionalProperties": false, "title": "DBQueryDetails"}, {"type": "object", "description": "Details for validating a booking status.", "properties": {"domain": {"type": "string", "enum": ["restaurant", "hotel", "attraction", "taxi", "train"]}, "restaurant": {"type": "object", "properties": {"info": {"type": "object", "properties": {"food": {"type": "string"}, "area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "name": {"type": "string"}}, "required": ["food", "area", "pricerange", "name"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "time": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}}, "required": ["people", "day", "time"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "hotel": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "pricerange": {"type": "string", "enum": ["cheap", "moderate", "expensive"]}, "type": {"type": "string", "enum": ["hotel", "guesthouse"]}, "internet": {"type": "string", "enum": ["yes", "no"]}, "parking": {"type": "string", "enum": ["yes", "no"]}, "name": {"type": "string"}, "stars": {"type": "string", "enum": ["1", "2", "3", "4", "5"]}}, "required": ["area", "pricerange", "type", "internet", "parking", "name", "stars"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "stay": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}}, "required": ["people", "day", "stay"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "attraction": {"type": "object", "properties": {"info": {"type": "object", "properties": {"area": {"type": "string", "enum": ["centre", "north", "east", "west", "south"]}, "type": {"type": "string", "enum": ["museum", "entertainment", "college", "nightclub", "swimming pool", "multiple sports", "architecture", "cinema", "boat", "theatre", "concert hall", "park", "local site", "hotspot", "church", "special"]}, "name": {"type": "string"}}, "required": ["area", "type", "name"], "additionalProperties": false}, "book": {"type": "object", "properties": {"phone": {"type": "string"}, "postcode": {"type": "string"}, "address": {"type": "string"}, "entrance_fee": {"type": "string"}}, "anyOf": [{"required": ["phone"]}, {"required": ["postcode"]}, {"required": ["address"]}, {"required": ["entrance_fee"]}], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "train": {"type": "object", "properties": {"info": {"type": "object", "properties": {"destination": {"type": "string"}, "departure": {"type": "string"}, "day": {"type": "string", "enum": ["monday", "tuesday", "wednesday", "thursday", "friday", "saturday", "sunday"]}, "arriveby": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "leaveat": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["destination", "departure", "day", "arriveby", "leaveat"], "additionalProperties": false}, "book": {"type": "object", "properties": {"people": {"type": "string", "enum": ["1", "2", "3", "4", "5", "6", "7", "8"]}, "trainid": {"type": "string"}}, "required": ["people", "trainid"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}, "taxi": {"type": "object", "properties": {"info": {"type": "object", "properties": {"arriveby": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}, "leaveat": {"type": "string", "pattern": "^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$"}}, "required": ["arriveby", "leaveat"], "additionalProperties": false}, "book": {"type": "object", "properties": {"phone": {"type": "string", "pattern": "^[0-9]{10}$"}, "car_type": {"type": "string", "enum": ["toyota", "skoda", "bmw", "honda", "ford", "audi", "lexus", "volvo", "volkswagen", "tesla"]}}, "required": ["phone", "car_type"], "additionalProperties": false}}, "required": ["info", "book"], "additionalProperties": false}}, "required": ["domain"], "additionalProperties": false, "title": "ValidateBookingDetails"}], "discriminator": {"propertyName": "status", "mapping": {"follow-up": "#/parameters/properties/details/oneOf/0", "db-query": "#/parameters/properties/details/oneOf/1", "validate-booking": "#/parameters/properties/details/oneOf/2"}}}}, "required": ["status", "details"], "additionalProperties": false}}}, "book_keys": {"train": {"people": "1"}, "restaurant": {"people": "1", "day": "monday", "time": "13:00"}}, "prompts": {"prompt_a": "ROLE: You are a user simulator tasked with interacting naturally with a dialogue system.\n\nTASK:\nYou are planning your trip in Cambridge.\nYou are looking for a train. The train should arrive by 16:00 and should leave on monday.\nThe train should go to broxbourne and should depart from cambridge.\nOnce you find the train you want to make a booking for 1 people.\nMake sure you get the reference number.\nYou are also looking for a particular restaurant. Its name is called travellers rest.\nOnce you find the restaurant you want to book a table for the same group of people at 13:00 on the same day.\nIf the booking fails how about tuesday.\nMake sure you get the reference number\n\nINSTRUCTIONS:\n1. Communicate naturally by expressing preferences, asking clarifying questions, and making decisions as needed. \n2. Maintain a polite and conversational tone.\n3. Respond strictly based on the dialogue system's response. Do not add logic or interpretation beyond what is explicitly stated in the TASK.\n4. Ensure that names and terms remain exactly as provided in the input, without any added or altered punctuation (e.g., do not add apostrophes, hyphens, or other symbols). Maintain strict adherence to the original formatting.\n5. Once the dialogue system completes the task and provides all the required details, reply with \"DONE\". No additional text should follow.\n6. Do not simulate or act as the dialogue system; only interact with it.\n7. Keep responses concise and focused, avoiding unnecessary elaboration or overly conversational tone.\n\n\nOUTPUT FORMAT:\n1. Interaction: Respond appropriately using only the dialogue system's response and the information under TASK.\n2. Task Completion: Reply with \"DONE\"\n\nLets begin\n", "turn_prompt_a": "1. Continue interacting until the task is complete.\n2. Once the dialogue system has completed the task, reply with \"DONE\".\n3. Do not simulate or act as the dialogue system; only interact with it.\n4. When responding to the dialogue system's queries, use only the information provided under TASK.\n5. Ensure that names and terms remain exactly as provided in the input, without any added or altered punctuation (e.g., do not add apostrophes, hyphens, or other symbols). Maintain strict adherence to the original formatting. If there is a conflict between TASK and the dialogue system’s details, always follow the TASK as the final authority.\n\nTASK:\nUse the following details to provide information during the conversation:\nYou are planning your trip in Cambridge.\nYou are looking for a train. The train should arrive by 16:00 and should leave on monday.\nThe train should go to broxbourne and should depart from cambridge.\nOnce you find the train you want to make a booking for 1 people.\nMake sure you get the reference number.\nYou are also looking for a particular restaurant. Its name is called travellers rest.\nOnce you find the restaurant you want to book a table for the same group of people at 13:00 on the same day.\nIf the booking fails how about tuesday.\nMake sure you get the reference number\n\nHere is the dialogue system's response:", "prompt_b": "ROLE: You are a specialized booking assistant interacting with a human user by generating structured JSON responses. Your role is to process user requests and ensure successful task completion while maintaining a professional, helpful tone.\n\nTASK: Assist the user conversationally by:\n1. Extracting key details needed for the task (e.g., domain, date, time, location).\n2. Cross-referencing user-provided information with the database to find relevant matches.\n3. Generating responses to gather missing or unclear information or to provide the booking status.\n4. Consolidating all extracted and clarified details for booking finalization.\n5. Validating the booking and generating confirmation details.\n6. Keeping responses concise and focused, avoiding unnecessary elaboration or overly conversational tone.\n7. All responses must strictly adhere to the schema. Include all required fields.\n\n\nUSER REQUEST:\n", "turn_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying the database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nUSER REQUEST:", "dbquery_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nDATABASE RETRIEVAL RESULTS:", "validbooking_prompt_b": "TASK:\n1. Review the previous state and new user input\n2. Update the conversation flow if necessary\n3. Identify missing or unclear information\n4. All responses must strictly adhere to the schema. Include all required fields\n\nRESPONSE FORMAT:\n1. For proceeding with the booking:\n{\n   \"status\": \"validate-booking\",\n   \"details\": {FILLED SLOTS}\n}\n\n2. For follow-up/acknowledgement (The FOLLOW-UP MESSAGE must be a concise string.):\n{\n   \"status\": \"follow-up\",\n   \"details\": FOLLOW-UP MESSAGE\n}\n\n3. For querying the database:\n{\n   \"status\": \"db-query\",\n   \"details\": {FILLED SLOTS}\n}\n\nBOOKING VALIDATION STATUS:"}}}]}]}